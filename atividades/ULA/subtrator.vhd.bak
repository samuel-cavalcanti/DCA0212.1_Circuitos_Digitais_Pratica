library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity subtrator is
	port(inputdata1: in std_logic_vector(3 downto 0);
		  inputdata2: in std_logic_vector(3 downto 0);
		  cin: in std_logic;
		  cout: out std_logic;
		  resultsubt: out std_logic_vector(3 downto 0););
end entity;

architecture behavior of somador is -- operate
begin
	process (inputdata1, inputdata2, cin)
		variable c std_logic; -- c é o vetor com todos os 'vai 1', carry
		variable s: std_logic_vector(3 downto 0); -- variável que armazena o resultado da operação
		begin
			c:= cin;
			
			s(0):= (inputdata1(0) xor inputdata2(0) xor c(0)); -- se o resultado for 1 + 1 = 10, o c recebe o bit menos significativo, no caso o '0'
			c:= (inputdata1(0) and inputdata2(0)) or (inputdata1(0) and c) or (inputdata2(0) and c);
			
			s(1):= (inputdata1(1) xor inputdata2(1) xor c(1));
			c:= (inputdata1(1) and inputdata2(1)) or (inputdata1(1) and c) or (inputdata2(1) and c);
			
			s(2):= (inputdata1(2) xor inputdata2(2) xor c(2));
			c:= (inputdata1(2) and inputdata2(2)) or (inputdata1(2) and c) or (inputdata2(2) and c);
			
			s(3):= (inputdata1(3) xor inputdata2(3) xor c(3));
			c:= (inputdata1(3) and inputdata2(3)) or (inputdata1(3) and c) or (inputdata2(3) and c);
						
			end if;
			
			outputdata <= s;
			cout <= c; 
			
	end process;
end behavior;