TimeQuest Timing Analyzer report for ula
Tue Nov 19 00:11:30 2019
Quartus II 32-bit Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition


---------------------
; Table of Contents ;
---------------------
  1. Legal Notice
  2. TimeQuest Timing Analyzer Summary
  3. Parallel Compilation
  4. Clocks
  5. Slow Model Fmax Summary
  6. Slow Model Setup Summary
  7. Slow Model Hold Summary
  8. Slow Model Recovery Summary
  9. Slow Model Removal Summary
 10. Slow Model Minimum Pulse Width Summary
 11. Slow Model Setup: 'mux_ula:seletor|ctrl[0]'
 12. Slow Model Setup: 'operator[0]'
 13. Slow Model Setup: 'inputdata1[0]'
 14. Slow Model Setup: 'key_0'
 15. Slow Model Hold: 'inputdata1[0]'
 16. Slow Model Hold: 'operator[0]'
 17. Slow Model Hold: 'key_0'
 18. Slow Model Hold: 'mux_ula:seletor|ctrl[0]'
 19. Slow Model Recovery: 'operator[0]'
 20. Slow Model Recovery: 'mux_ula:seletor|ctrl[0]'
 21. Slow Model Removal: 'mux_ula:seletor|ctrl[0]'
 22. Slow Model Removal: 'operator[0]'
 23. Slow Model Minimum Pulse Width: 'inputdata1[0]'
 24. Slow Model Minimum Pulse Width: 'operator[0]'
 25. Slow Model Minimum Pulse Width: 'key_0'
 26. Slow Model Minimum Pulse Width: 'mux_ula:seletor|ctrl[0]'
 27. Setup Times
 28. Hold Times
 29. Clock to Output Times
 30. Minimum Clock to Output Times
 31. Fast Model Setup Summary
 32. Fast Model Hold Summary
 33. Fast Model Recovery Summary
 34. Fast Model Removal Summary
 35. Fast Model Minimum Pulse Width Summary
 36. Fast Model Setup: 'mux_ula:seletor|ctrl[0]'
 37. Fast Model Setup: 'operator[0]'
 38. Fast Model Setup: 'key_0'
 39. Fast Model Setup: 'inputdata1[0]'
 40. Fast Model Hold: 'inputdata1[0]'
 41. Fast Model Hold: 'operator[0]'
 42. Fast Model Hold: 'key_0'
 43. Fast Model Hold: 'mux_ula:seletor|ctrl[0]'
 44. Fast Model Recovery: 'operator[0]'
 45. Fast Model Recovery: 'mux_ula:seletor|ctrl[0]'
 46. Fast Model Removal: 'mux_ula:seletor|ctrl[0]'
 47. Fast Model Removal: 'operator[0]'
 48. Fast Model Minimum Pulse Width: 'inputdata1[0]'
 49. Fast Model Minimum Pulse Width: 'operator[0]'
 50. Fast Model Minimum Pulse Width: 'key_0'
 51. Fast Model Minimum Pulse Width: 'mux_ula:seletor|ctrl[0]'
 52. Setup Times
 53. Hold Times
 54. Clock to Output Times
 55. Minimum Clock to Output Times
 56. Multicorner Timing Analysis Summary
 57. Setup Times
 58. Hold Times
 59. Clock to Output Times
 60. Minimum Clock to Output Times
 61. Setup Transfers
 62. Hold Transfers
 63. Recovery Transfers
 64. Removal Transfers
 65. Report TCCS
 66. Report RSKM
 67. Unconstrained Paths
 68. TimeQuest Timing Analyzer Messages



----------------
; Legal Notice ;
----------------
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.



+----------------------------------------------------------------------------------------+
; TimeQuest Timing Analyzer Summary                                                      ;
+--------------------+-------------------------------------------------------------------+
; Quartus II Version ; Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition ;
; Revision Name      ; ula                                                               ;
; Device Family      ; Cyclone II                                                        ;
; Device Name        ; EP2C35F672C6                                                      ;
; Timing Models      ; Final                                                             ;
; Delay Model        ; Combined                                                          ;
; Rise/Fall Delays   ; Unavailable                                                       ;
+--------------------+-------------------------------------------------------------------+


Parallel compilation was disabled, but you have multiple processors available. Enable parallel compilation to reduce compilation time.
+-------------------------------------+
; Parallel Compilation                ;
+----------------------------+--------+
; Processors                 ; Number ;
+----------------------------+--------+
; Number detected on machine ; 8      ;
; Maximum allowed            ; 1      ;
+----------------------------+--------+


+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Clocks                                                                                                                                                                                                           ;
+-------------------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+-----------------------------+
; Clock Name              ; Type ; Period ; Frequency  ; Rise  ; Fall  ; Duty Cycle ; Divide by ; Multiply by ; Phase ; Offset ; Edge List ; Edge Shift ; Inverted ; Master ; Source ; Targets                     ;
+-------------------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+-----------------------------+
; inputdata1[0]           ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { inputdata1[0] }           ;
; key_0                   ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { key_0 }                   ;
; mux_ula:seletor|ctrl[0] ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { mux_ula:seletor|ctrl[0] } ;
; operator[0]             ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { operator[0] }             ;
+-------------------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+-----------------------------+


+---------------------------------------------------------------------------------------------------------------+
; Slow Model Fmax Summary                                                                                       ;
+-------------+-----------------+---------------+---------------------------------------------------------------+
; Fmax        ; Restricted Fmax ; Clock Name    ; Note                                                          ;
+-------------+-----------------+---------------+---------------------------------------------------------------+
; 313.48 MHz  ; 313.48 MHz      ; operator[0]   ;                                                               ;
; 1022.49 MHz ; 420.17 MHz      ; inputdata1[0] ; limit due to minimum period restriction (max I/O toggle rate) ;
; 1610.31 MHz ; 450.05 MHz      ; key_0         ; limit due to minimum period restriction (max I/O toggle rate) ;
+-------------+-----------------+---------------+---------------------------------------------------------------+
This panel reports FMAX for every clock in the design, regardless of the user-specified clock periods.  FMAX is only computed for paths where the source and destination registers or ports are driven by the same clock.  Paths of different clocks, including generated clocks, are ignored.  For paths between a clock and its inversion, FMAX is computed as if the rising and falling edges are scaled along with FMAX, such that the duty cycle (in terms of a percentage) is maintained. Altera recommends that you always use clock constraints and other slack reports for sign-off analysis.


+--------------------------------------------------+
; Slow Model Setup Summary                         ;
+-------------------------+--------+---------------+
; Clock                   ; Slack  ; End Point TNS ;
+-------------------------+--------+---------------+
; mux_ula:seletor|ctrl[0] ; -4.736 ; -9.449        ;
; operator[0]             ; -2.222 ; -5.582        ;
; inputdata1[0]           ; 0.011  ; 0.000         ;
; key_0                   ; 0.379  ; 0.000         ;
+-------------------------+--------+---------------+


+--------------------------------------------------+
; Slow Model Hold Summary                          ;
+-------------------------+--------+---------------+
; Clock                   ; Slack  ; End Point TNS ;
+-------------------------+--------+---------------+
; inputdata1[0]           ; -1.052 ; -3.890        ;
; operator[0]             ; -0.284 ; -0.818        ;
; key_0                   ; 0.391  ; 0.000         ;
; mux_ula:seletor|ctrl[0] ; 3.159  ; 0.000         ;
+-------------------------+--------+---------------+


+--------------------------------------------------+
; Slow Model Recovery Summary                      ;
+-------------------------+--------+---------------+
; Clock                   ; Slack  ; End Point TNS ;
+-------------------------+--------+---------------+
; operator[0]             ; -1.696 ; -2.475        ;
; mux_ula:seletor|ctrl[0] ; 1.879  ; 0.000         ;
+-------------------------+--------+---------------+


+--------------------------------------------------+
; Slow Model Removal Summary                       ;
+-------------------------+--------+---------------+
; Clock                   ; Slack  ; End Point TNS ;
+-------------------------+--------+---------------+
; mux_ula:seletor|ctrl[0] ; -2.373 ; -4.746        ;
; operator[0]             ; -0.135 ; -0.135        ;
+-------------------------+--------+---------------+


+--------------------------------------------------+
; Slow Model Minimum Pulse Width Summary           ;
+-------------------------+--------+---------------+
; Clock                   ; Slack  ; End Point TNS ;
+-------------------------+--------+---------------+
; inputdata1[0]           ; -1.380 ; -1.380        ;
; operator[0]             ; -1.380 ; -1.380        ;
; key_0                   ; -1.222 ; -2.222        ;
; mux_ula:seletor|ctrl[0] ; 0.500  ; 0.000         ;
+-------------------------+--------+---------------+


+-------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'mux_ula:seletor|ctrl[0]'                                                                                                                 ;
+--------+----------------------+------------------------------------------+---------------+-------------------------+--------------+------------+------------+
; Slack  ; From Node            ; To Node                                  ; Launch Clock  ; Latch Clock             ; Relationship ; Clock Skew ; Data Delay ;
+--------+----------------------+------------------------------------------+---------------+-------------------------+--------------+------------+------------+
; -4.736 ; mux_ula:seletor|y[1] ; convdisplay:conversor_display|display[3] ; inputdata1[0] ; mux_ula:seletor|ctrl[0] ; 0.500        ; -3.106     ; 1.137      ;
; -4.713 ; mux_ula:seletor|y[1] ; convdisplay:conversor_display|display[0] ; inputdata1[0] ; mux_ula:seletor|ctrl[0] ; 0.500        ; -3.106     ; 1.113      ;
; -4.693 ; mux_ula:seletor|y[2] ; convdisplay:conversor_display|display[0] ; inputdata1[0] ; mux_ula:seletor|ctrl[0] ; 0.500        ; -3.106     ; 1.093      ;
; -4.692 ; mux_ula:seletor|y[2] ; convdisplay:conversor_display|display[3] ; inputdata1[0] ; mux_ula:seletor|ctrl[0] ; 0.500        ; -3.106     ; 1.093      ;
; -4.555 ; mux_ula:seletor|y[3] ; convdisplay:conversor_display|display[0] ; inputdata1[0] ; mux_ula:seletor|ctrl[0] ; 0.500        ; -3.102     ; 0.959      ;
; -4.554 ; mux_ula:seletor|y[3] ; convdisplay:conversor_display|display[3] ; inputdata1[0] ; mux_ula:seletor|ctrl[0] ; 0.500        ; -3.102     ; 0.959      ;
; -4.421 ; mux_ula:seletor|y[0] ; convdisplay:conversor_display|display[0] ; inputdata1[0] ; mux_ula:seletor|ctrl[0] ; 0.500        ; -3.102     ; 0.825      ;
; -4.420 ; mux_ula:seletor|y[0] ; convdisplay:conversor_display|display[3] ; inputdata1[0] ; mux_ula:seletor|ctrl[0] ; 0.500        ; -3.102     ; 0.825      ;
; -3.468 ; mux_ula:seletor|y[1] ; convdisplay:conversor_display|display[3] ; operator[0]   ; mux_ula:seletor|ctrl[0] ; 1.000        ; -2.338     ; 1.137      ;
; -3.445 ; mux_ula:seletor|y[1] ; convdisplay:conversor_display|display[0] ; operator[0]   ; mux_ula:seletor|ctrl[0] ; 1.000        ; -2.338     ; 1.113      ;
; -3.425 ; mux_ula:seletor|y[2] ; convdisplay:conversor_display|display[0] ; operator[0]   ; mux_ula:seletor|ctrl[0] ; 1.000        ; -2.338     ; 1.093      ;
; -3.424 ; mux_ula:seletor|y[2] ; convdisplay:conversor_display|display[3] ; operator[0]   ; mux_ula:seletor|ctrl[0] ; 1.000        ; -2.338     ; 1.093      ;
; -3.287 ; mux_ula:seletor|y[3] ; convdisplay:conversor_display|display[0] ; operator[0]   ; mux_ula:seletor|ctrl[0] ; 1.000        ; -2.334     ; 0.959      ;
; -3.286 ; mux_ula:seletor|y[3] ; convdisplay:conversor_display|display[3] ; operator[0]   ; mux_ula:seletor|ctrl[0] ; 1.000        ; -2.334     ; 0.959      ;
; -3.153 ; mux_ula:seletor|y[0] ; convdisplay:conversor_display|display[0] ; operator[0]   ; mux_ula:seletor|ctrl[0] ; 1.000        ; -2.334     ; 0.825      ;
; -3.152 ; mux_ula:seletor|y[0] ; convdisplay:conversor_display|display[3] ; operator[0]   ; mux_ula:seletor|ctrl[0] ; 1.000        ; -2.334     ; 0.825      ;
+--------+----------------------+------------------------------------------+---------------+-------------------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'operator[0]'                                                                                           ;
+--------+---------------+---------------------------+---------------+-------------+--------------+------------+------------+
; Slack  ; From Node     ; To Node                   ; Launch Clock  ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+---------------+---------------------------+---------------+-------------+--------------+------------+------------+
; -2.222 ; inputdata1[0] ; mux_ula:seletor|saida_led ; inputdata1[0] ; operator[0] ; 0.500        ; 3.361      ; 5.014      ;
; -1.774 ; inputdata1[0] ; mux_ula:seletor|ctrl[0]   ; inputdata1[0] ; operator[0] ; 0.500        ; 3.185      ; 4.341      ;
; -1.722 ; inputdata1[0] ; mux_ula:seletor|saida_led ; inputdata1[0] ; operator[0] ; 1.000        ; 3.361      ; 5.014      ;
; -1.274 ; inputdata1[0] ; mux_ula:seletor|ctrl[0]   ; inputdata1[0] ; operator[0] ; 1.000        ; 3.185      ; 4.341      ;
; -1.095 ; operator[0]   ; mux_ula:seletor|saida_led ; operator[0]   ; operator[0] ; 0.500        ; 3.361      ; 3.887      ;
; -0.757 ; inputdata1[0] ; mux_ula:seletor|y[2]      ; inputdata1[0] ; operator[0] ; 0.500        ; 5.805      ; 5.935      ;
; -0.675 ; operator[0]   ; mux_ula:seletor|ctrl[0]   ; operator[0]   ; operator[0] ; 0.500        ; 3.185      ; 3.242      ;
; -0.595 ; operator[0]   ; mux_ula:seletor|saida_led ; operator[0]   ; operator[0] ; 1.000        ; 3.361      ; 3.887      ;
; -0.527 ; operator[0]   ; mux_ula:seletor|y[2]      ; operator[0]   ; operator[0] ; 0.500        ; 5.805      ; 5.705      ;
; -0.337 ; inputdata1[0] ; mux_ula:seletor|y[0]      ; inputdata1[0] ; operator[0] ; 0.500        ; 5.801      ; 5.763      ;
; -0.307 ; inputdata1[0] ; mux_ula:seletor|y[3]      ; inputdata1[0] ; operator[0] ; 0.500        ; 5.801      ; 5.907      ;
; -0.257 ; inputdata1[0] ; mux_ula:seletor|y[2]      ; inputdata1[0] ; operator[0] ; 1.000        ; 5.805      ; 5.935      ;
; -0.188 ; operator[0]   ; mux_ula:seletor|y[0]      ; operator[0]   ; operator[0] ; 0.500        ; 5.801      ; 5.614      ;
; -0.185 ; inputdata1[0] ; mux_ula:seletor|y[1]      ; inputdata1[0] ; operator[0] ; 0.500        ; 5.805      ; 5.792      ;
; -0.175 ; operator[0]   ; mux_ula:seletor|ctrl[0]   ; operator[0]   ; operator[0] ; 1.000        ; 3.185      ; 3.242      ;
; -0.086 ; operator[0]   ; mux_ula:seletor|y[1]      ; operator[0]   ; operator[0] ; 0.500        ; 5.805      ; 5.693      ;
; -0.027 ; operator[0]   ; mux_ula:seletor|y[2]      ; operator[0]   ; operator[0] ; 1.000        ; 5.805      ; 5.705      ;
; -0.016 ; operator[0]   ; mux_ula:seletor|y[3]      ; operator[0]   ; operator[0] ; 0.500        ; 5.801      ; 5.616      ;
; 0.163  ; inputdata1[0] ; mux_ula:seletor|y[0]      ; inputdata1[0] ; operator[0] ; 1.000        ; 5.801      ; 5.763      ;
; 0.193  ; inputdata1[0] ; mux_ula:seletor|y[3]      ; inputdata1[0] ; operator[0] ; 1.000        ; 5.801      ; 5.907      ;
; 0.312  ; operator[0]   ; mux_ula:seletor|y[0]      ; operator[0]   ; operator[0] ; 1.000        ; 5.801      ; 5.614      ;
; 0.315  ; inputdata1[0] ; mux_ula:seletor|y[1]      ; inputdata1[0] ; operator[0] ; 1.000        ; 5.805      ; 5.792      ;
; 0.414  ; operator[0]   ; mux_ula:seletor|y[1]      ; operator[0]   ; operator[0] ; 1.000        ; 5.805      ; 5.693      ;
; 0.484  ; operator[0]   ; mux_ula:seletor|y[3]      ; operator[0]   ; operator[0] ; 1.000        ; 5.801      ; 5.616      ;
+--------+---------------+---------------------------+---------------+-------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'inputdata1[0]'                                                                                     ;
+-------+---------------+----------------------+---------------+---------------+--------------+------------+------------+
; Slack ; From Node     ; To Node              ; Launch Clock  ; Latch Clock   ; Relationship ; Clock Skew ; Data Delay ;
+-------+---------------+----------------------+---------------+---------------+--------------+------------+------------+
; 0.011 ; inputdata1[0] ; mux_ula:seletor|y[2] ; inputdata1[0] ; inputdata1[0] ; 0.500        ; 6.573      ; 5.935      ;
; 0.241 ; operator[0]   ; mux_ula:seletor|y[2] ; operator[0]   ; inputdata1[0] ; 0.500        ; 6.573      ; 5.705      ;
; 0.431 ; inputdata1[0] ; mux_ula:seletor|y[0] ; inputdata1[0] ; inputdata1[0] ; 0.500        ; 6.569      ; 5.763      ;
; 0.461 ; inputdata1[0] ; mux_ula:seletor|y[3] ; inputdata1[0] ; inputdata1[0] ; 0.500        ; 6.569      ; 5.907      ;
; 0.511 ; inputdata1[0] ; mux_ula:seletor|y[2] ; inputdata1[0] ; inputdata1[0] ; 1.000        ; 6.573      ; 5.935      ;
; 0.580 ; operator[0]   ; mux_ula:seletor|y[0] ; operator[0]   ; inputdata1[0] ; 0.500        ; 6.569      ; 5.614      ;
; 0.583 ; inputdata1[0] ; mux_ula:seletor|y[1] ; inputdata1[0] ; inputdata1[0] ; 0.500        ; 6.573      ; 5.792      ;
; 0.682 ; operator[0]   ; mux_ula:seletor|y[1] ; operator[0]   ; inputdata1[0] ; 0.500        ; 6.573      ; 5.693      ;
; 0.741 ; operator[0]   ; mux_ula:seletor|y[2] ; operator[0]   ; inputdata1[0] ; 1.000        ; 6.573      ; 5.705      ;
; 0.752 ; operator[0]   ; mux_ula:seletor|y[3] ; operator[0]   ; inputdata1[0] ; 0.500        ; 6.569      ; 5.616      ;
; 0.931 ; inputdata1[0] ; mux_ula:seletor|y[0] ; inputdata1[0] ; inputdata1[0] ; 1.000        ; 6.569      ; 5.763      ;
; 0.961 ; inputdata1[0] ; mux_ula:seletor|y[3] ; inputdata1[0] ; inputdata1[0] ; 1.000        ; 6.569      ; 5.907      ;
; 1.080 ; operator[0]   ; mux_ula:seletor|y[0] ; operator[0]   ; inputdata1[0] ; 1.000        ; 6.569      ; 5.614      ;
; 1.083 ; inputdata1[0] ; mux_ula:seletor|y[1] ; inputdata1[0] ; inputdata1[0] ; 1.000        ; 6.573      ; 5.792      ;
; 1.182 ; operator[0]   ; mux_ula:seletor|y[1] ; operator[0]   ; inputdata1[0] ; 1.000        ; 6.573      ; 5.693      ;
; 1.252 ; operator[0]   ; mux_ula:seletor|y[3] ; operator[0]   ; inputdata1[0] ; 1.000        ; 6.569      ; 5.616      ;
+-------+---------------+----------------------+---------------+---------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'key_0'                                                                                                     ;
+-------+------------------------+------------------------+--------------+-------------+--------------+------------+------------+
; Slack ; From Node              ; To Node                ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+-------+------------------------+------------------------+--------------+-------------+--------------+------------+------------+
; 0.379 ; button:button|keyonoff ; button:button|keyonoff ; key_0        ; key_0       ; 1.000        ; 0.000      ; 0.657      ;
+-------+------------------------+------------------------+--------------+-------------+--------------+------------+------------+


+------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'inputdata1[0]'                                                                                       ;
+--------+---------------+----------------------+---------------+---------------+--------------+------------+------------+
; Slack  ; From Node     ; To Node              ; Launch Clock  ; Latch Clock   ; Relationship ; Clock Skew ; Data Delay ;
+--------+---------------+----------------------+---------------+---------------+--------------+------------+------------+
; -1.052 ; inputdata1[0] ; mux_ula:seletor|y[0] ; inputdata1[0] ; inputdata1[0] ; 0.000        ; 6.569      ; 5.517      ;
; -1.011 ; operator[0]   ; mux_ula:seletor|y[3] ; operator[0]   ; inputdata1[0] ; 0.000        ; 6.569      ; 5.558      ;
; -0.955 ; operator[0]   ; mux_ula:seletor|y[0] ; operator[0]   ; inputdata1[0] ; 0.000        ; 6.569      ; 5.614      ;
; -0.934 ; operator[0]   ; mux_ula:seletor|y[1] ; operator[0]   ; inputdata1[0] ; 0.000        ; 6.573      ; 5.639      ;
; -0.893 ; operator[0]   ; mux_ula:seletor|y[2] ; operator[0]   ; inputdata1[0] ; 0.000        ; 6.573      ; 5.680      ;
; -0.862 ; inputdata1[0] ; mux_ula:seletor|y[3] ; inputdata1[0] ; inputdata1[0] ; 0.000        ; 6.569      ; 5.707      ;
; -0.838 ; inputdata1[0] ; mux_ula:seletor|y[2] ; inputdata1[0] ; inputdata1[0] ; 0.000        ; 6.573      ; 5.735      ;
; -0.836 ; inputdata1[0] ; mux_ula:seletor|y[1] ; inputdata1[0] ; inputdata1[0] ; 0.000        ; 6.573      ; 5.737      ;
; -0.552 ; inputdata1[0] ; mux_ula:seletor|y[0] ; inputdata1[0] ; inputdata1[0] ; -0.500       ; 6.569      ; 5.517      ;
; -0.511 ; operator[0]   ; mux_ula:seletor|y[3] ; operator[0]   ; inputdata1[0] ; -0.500       ; 6.569      ; 5.558      ;
; -0.455 ; operator[0]   ; mux_ula:seletor|y[0] ; operator[0]   ; inputdata1[0] ; -0.500       ; 6.569      ; 5.614      ;
; -0.434 ; operator[0]   ; mux_ula:seletor|y[1] ; operator[0]   ; inputdata1[0] ; -0.500       ; 6.573      ; 5.639      ;
; -0.393 ; operator[0]   ; mux_ula:seletor|y[2] ; operator[0]   ; inputdata1[0] ; -0.500       ; 6.573      ; 5.680      ;
; -0.362 ; inputdata1[0] ; mux_ula:seletor|y[3] ; inputdata1[0] ; inputdata1[0] ; -0.500       ; 6.569      ; 5.707      ;
; -0.338 ; inputdata1[0] ; mux_ula:seletor|y[2] ; inputdata1[0] ; inputdata1[0] ; -0.500       ; 6.573      ; 5.735      ;
; -0.336 ; inputdata1[0] ; mux_ula:seletor|y[1] ; inputdata1[0] ; inputdata1[0] ; -0.500       ; 6.573      ; 5.737      ;
+--------+---------------+----------------------+---------------+---------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'operator[0]'                                                                                            ;
+--------+---------------+---------------------------+---------------+-------------+--------------+------------+------------+
; Slack  ; From Node     ; To Node                   ; Launch Clock  ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+---------------+---------------------------+---------------+-------------+--------------+------------+------------+
; -0.284 ; inputdata1[0] ; mux_ula:seletor|y[0]      ; inputdata1[0] ; operator[0] ; 0.000        ; 5.801      ; 5.517      ;
; -0.243 ; operator[0]   ; mux_ula:seletor|y[3]      ; operator[0]   ; operator[0] ; 0.000        ; 5.801      ; 5.558      ;
; -0.187 ; operator[0]   ; mux_ula:seletor|y[0]      ; operator[0]   ; operator[0] ; 0.000        ; 5.801      ; 5.614      ;
; -0.166 ; operator[0]   ; mux_ula:seletor|y[1]      ; operator[0]   ; operator[0] ; 0.000        ; 5.805      ; 5.639      ;
; -0.125 ; operator[0]   ; mux_ula:seletor|y[2]      ; operator[0]   ; operator[0] ; 0.000        ; 5.805      ; 5.680      ;
; -0.094 ; inputdata1[0] ; mux_ula:seletor|y[3]      ; inputdata1[0] ; operator[0] ; 0.000        ; 5.801      ; 5.707      ;
; -0.070 ; inputdata1[0] ; mux_ula:seletor|y[2]      ; inputdata1[0] ; operator[0] ; 0.000        ; 5.805      ; 5.735      ;
; -0.068 ; inputdata1[0] ; mux_ula:seletor|y[1]      ; inputdata1[0] ; operator[0] ; 0.000        ; 5.805      ; 5.737      ;
; 0.057  ; operator[0]   ; mux_ula:seletor|ctrl[0]   ; operator[0]   ; operator[0] ; 0.000        ; 3.185      ; 3.242      ;
; 0.151  ; operator[0]   ; mux_ula:seletor|saida_led ; operator[0]   ; operator[0] ; 0.000        ; 3.361      ; 3.512      ;
; 0.216  ; inputdata1[0] ; mux_ula:seletor|y[0]      ; inputdata1[0] ; operator[0] ; -0.500       ; 5.801      ; 5.517      ;
; 0.257  ; operator[0]   ; mux_ula:seletor|y[3]      ; operator[0]   ; operator[0] ; -0.500       ; 5.801      ; 5.558      ;
; 0.313  ; operator[0]   ; mux_ula:seletor|y[0]      ; operator[0]   ; operator[0] ; -0.500       ; 5.801      ; 5.614      ;
; 0.334  ; operator[0]   ; mux_ula:seletor|y[1]      ; operator[0]   ; operator[0] ; -0.500       ; 5.805      ; 5.639      ;
; 0.375  ; operator[0]   ; mux_ula:seletor|y[2]      ; operator[0]   ; operator[0] ; -0.500       ; 5.805      ; 5.680      ;
; 0.406  ; inputdata1[0] ; mux_ula:seletor|y[3]      ; inputdata1[0] ; operator[0] ; -0.500       ; 5.801      ; 5.707      ;
; 0.430  ; inputdata1[0] ; mux_ula:seletor|y[2]      ; inputdata1[0] ; operator[0] ; -0.500       ; 5.805      ; 5.735      ;
; 0.432  ; inputdata1[0] ; mux_ula:seletor|y[1]      ; inputdata1[0] ; operator[0] ; -0.500       ; 5.805      ; 5.737      ;
; 0.557  ; operator[0]   ; mux_ula:seletor|ctrl[0]   ; operator[0]   ; operator[0] ; -0.500       ; 3.185      ; 3.242      ;
; 0.651  ; operator[0]   ; mux_ula:seletor|saida_led ; operator[0]   ; operator[0] ; -0.500       ; 3.361      ; 3.512      ;
; 1.156  ; inputdata1[0] ; mux_ula:seletor|ctrl[0]   ; inputdata1[0] ; operator[0] ; 0.000        ; 3.185      ; 4.341      ;
; 1.330  ; inputdata1[0] ; mux_ula:seletor|saida_led ; inputdata1[0] ; operator[0] ; 0.000        ; 3.361      ; 4.691      ;
; 1.656  ; inputdata1[0] ; mux_ula:seletor|ctrl[0]   ; inputdata1[0] ; operator[0] ; -0.500       ; 3.185      ; 4.341      ;
; 1.830  ; inputdata1[0] ; mux_ula:seletor|saida_led ; inputdata1[0] ; operator[0] ; -0.500       ; 3.361      ; 4.691      ;
+--------+---------------+---------------------------+---------------+-------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'key_0'                                                                                                      ;
+-------+------------------------+------------------------+--------------+-------------+--------------+------------+------------+
; Slack ; From Node              ; To Node                ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+-------+------------------------+------------------------+--------------+-------------+--------------+------------+------------+
; 0.391 ; button:button|keyonoff ; button:button|keyonoff ; key_0        ; key_0       ; 0.000        ; 0.000      ; 0.657      ;
+-------+------------------------+------------------------+--------------+-------------+--------------+------------+------------+


+------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'mux_ula:seletor|ctrl[0]'                                                                                                                 ;
+-------+----------------------+------------------------------------------+---------------+-------------------------+--------------+------------+------------+
; Slack ; From Node            ; To Node                                  ; Launch Clock  ; Latch Clock             ; Relationship ; Clock Skew ; Data Delay ;
+-------+----------------------+------------------------------------------+---------------+-------------------------+--------------+------------+------------+
; 3.159 ; mux_ula:seletor|y[0] ; convdisplay:conversor_display|display[0] ; operator[0]   ; mux_ula:seletor|ctrl[0] ; 0.000        ; -2.334     ; 0.825      ;
; 3.159 ; mux_ula:seletor|y[0] ; convdisplay:conversor_display|display[3] ; operator[0]   ; mux_ula:seletor|ctrl[0] ; 0.000        ; -2.334     ; 0.825      ;
; 3.293 ; mux_ula:seletor|y[3] ; convdisplay:conversor_display|display[0] ; operator[0]   ; mux_ula:seletor|ctrl[0] ; 0.000        ; -2.334     ; 0.959      ;
; 3.293 ; mux_ula:seletor|y[3] ; convdisplay:conversor_display|display[3] ; operator[0]   ; mux_ula:seletor|ctrl[0] ; 0.000        ; -2.334     ; 0.959      ;
; 3.431 ; mux_ula:seletor|y[2] ; convdisplay:conversor_display|display[0] ; operator[0]   ; mux_ula:seletor|ctrl[0] ; 0.000        ; -2.338     ; 1.093      ;
; 3.431 ; mux_ula:seletor|y[2] ; convdisplay:conversor_display|display[3] ; operator[0]   ; mux_ula:seletor|ctrl[0] ; 0.000        ; -2.338     ; 1.093      ;
; 3.451 ; mux_ula:seletor|y[1] ; convdisplay:conversor_display|display[0] ; operator[0]   ; mux_ula:seletor|ctrl[0] ; 0.000        ; -2.338     ; 1.113      ;
; 3.475 ; mux_ula:seletor|y[1] ; convdisplay:conversor_display|display[3] ; operator[0]   ; mux_ula:seletor|ctrl[0] ; 0.000        ; -2.338     ; 1.137      ;
; 4.427 ; mux_ula:seletor|y[0] ; convdisplay:conversor_display|display[0] ; inputdata1[0] ; mux_ula:seletor|ctrl[0] ; -0.500       ; -3.102     ; 0.825      ;
; 4.427 ; mux_ula:seletor|y[0] ; convdisplay:conversor_display|display[3] ; inputdata1[0] ; mux_ula:seletor|ctrl[0] ; -0.500       ; -3.102     ; 0.825      ;
; 4.561 ; mux_ula:seletor|y[3] ; convdisplay:conversor_display|display[0] ; inputdata1[0] ; mux_ula:seletor|ctrl[0] ; -0.500       ; -3.102     ; 0.959      ;
; 4.561 ; mux_ula:seletor|y[3] ; convdisplay:conversor_display|display[3] ; inputdata1[0] ; mux_ula:seletor|ctrl[0] ; -0.500       ; -3.102     ; 0.959      ;
; 4.699 ; mux_ula:seletor|y[2] ; convdisplay:conversor_display|display[0] ; inputdata1[0] ; mux_ula:seletor|ctrl[0] ; -0.500       ; -3.106     ; 1.093      ;
; 4.699 ; mux_ula:seletor|y[2] ; convdisplay:conversor_display|display[3] ; inputdata1[0] ; mux_ula:seletor|ctrl[0] ; -0.500       ; -3.106     ; 1.093      ;
; 4.719 ; mux_ula:seletor|y[1] ; convdisplay:conversor_display|display[0] ; inputdata1[0] ; mux_ula:seletor|ctrl[0] ; -0.500       ; -3.106     ; 1.113      ;
; 4.743 ; mux_ula:seletor|y[1] ; convdisplay:conversor_display|display[3] ; inputdata1[0] ; mux_ula:seletor|ctrl[0] ; -0.500       ; -3.106     ; 1.137      ;
+-------+----------------------+------------------------------------------+---------------+-------------------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Recovery: 'operator[0]'                                                                                                ;
+--------+------------------------+---------------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node              ; To Node                   ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+------------------------+---------------------------+--------------+-------------+--------------+------------+------------+
; -1.696 ; button:button|keyonoff ; mux_ula:seletor|ctrl[0]   ; key_0        ; operator[0] ; 0.500        ; 0.044      ; 1.122      ;
; -0.779 ; button:button|keyonoff ; mux_ula:seletor|saida_led ; key_0        ; operator[0] ; 1.000        ; 0.220      ; 0.930      ;
; -0.483 ; operator[0]            ; mux_ula:seletor|ctrl[0]   ; operator[0]  ; operator[0] ; 0.500        ; 3.185      ; 3.050      ;
; 0.017  ; operator[0]            ; mux_ula:seletor|ctrl[0]   ; operator[0]  ; operator[0] ; 1.000        ; 3.185      ; 3.050      ;
+--------+------------------------+---------------------------+--------------+-------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Recovery: 'mux_ula:seletor|ctrl[0]'                                                                                                                          ;
+-------+-------------------------+------------------------------------------+-------------------------+-------------------------+--------------+------------+------------+
; Slack ; From Node               ; To Node                                  ; Launch Clock            ; Latch Clock             ; Relationship ; Clock Skew ; Data Delay ;
+-------+-------------------------+------------------------------------------+-------------------------+-------------------------+--------------+------------+------------+
; 1.879 ; mux_ula:seletor|ctrl[0] ; convdisplay:conversor_display|display[0] ; mux_ula:seletor|ctrl[0] ; mux_ula:seletor|ctrl[0] ; 0.500        ; 3.467      ; 1.094      ;
; 1.880 ; mux_ula:seletor|ctrl[0] ; convdisplay:conversor_display|display[3] ; mux_ula:seletor|ctrl[0] ; mux_ula:seletor|ctrl[0] ; 0.500        ; 3.467      ; 1.094      ;
; 2.379 ; mux_ula:seletor|ctrl[0] ; convdisplay:conversor_display|display[0] ; mux_ula:seletor|ctrl[0] ; mux_ula:seletor|ctrl[0] ; 1.000        ; 3.467      ; 1.094      ;
; 2.380 ; mux_ula:seletor|ctrl[0] ; convdisplay:conversor_display|display[3] ; mux_ula:seletor|ctrl[0] ; mux_ula:seletor|ctrl[0] ; 1.000        ; 3.467      ; 1.094      ;
+-------+-------------------------+------------------------------------------+-------------------------+-------------------------+--------------+------------+------------+


+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Removal: 'mux_ula:seletor|ctrl[0]'                                                                                                                            ;
+--------+-------------------------+------------------------------------------+-------------------------+-------------------------+--------------+------------+------------+
; Slack  ; From Node               ; To Node                                  ; Launch Clock            ; Latch Clock             ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------------+------------------------------------------+-------------------------+-------------------------+--------------+------------+------------+
; -2.373 ; mux_ula:seletor|ctrl[0] ; convdisplay:conversor_display|display[0] ; mux_ula:seletor|ctrl[0] ; mux_ula:seletor|ctrl[0] ; 0.000        ; 3.467      ; 1.094      ;
; -2.373 ; mux_ula:seletor|ctrl[0] ; convdisplay:conversor_display|display[3] ; mux_ula:seletor|ctrl[0] ; mux_ula:seletor|ctrl[0] ; 0.000        ; 3.467      ; 1.094      ;
; -1.873 ; mux_ula:seletor|ctrl[0] ; convdisplay:conversor_display|display[0] ; mux_ula:seletor|ctrl[0] ; mux_ula:seletor|ctrl[0] ; -0.500       ; 3.467      ; 1.094      ;
; -1.873 ; mux_ula:seletor|ctrl[0] ; convdisplay:conversor_display|display[3] ; mux_ula:seletor|ctrl[0] ; mux_ula:seletor|ctrl[0] ; -0.500       ; 3.467      ; 1.094      ;
+--------+-------------------------+------------------------------------------+-------------------------+-------------------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Removal: 'operator[0]'                                                                                                 ;
+--------+------------------------+---------------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node              ; To Node                   ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+------------------------+---------------------------+--------------+-------------+--------------+------------+------------+
; -0.135 ; operator[0]            ; mux_ula:seletor|ctrl[0]   ; operator[0]  ; operator[0] ; 0.000        ; 3.185      ; 3.050      ;
; 0.365  ; operator[0]            ; mux_ula:seletor|ctrl[0]   ; operator[0]  ; operator[0] ; -0.500       ; 3.185      ; 3.050      ;
; 0.710  ; button:button|keyonoff ; mux_ula:seletor|saida_led ; key_0        ; operator[0] ; 0.000        ; 0.220      ; 0.930      ;
; 1.578  ; button:button|keyonoff ; mux_ula:seletor|ctrl[0]   ; key_0        ; operator[0] ; -0.500       ; 0.044      ; 1.122      ;
+--------+------------------------+---------------------------+--------------+-------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'inputdata1[0]'                                                                                           ;
+--------+--------------+----------------+------------------+---------------+------------+--------------------------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock         ; Clock Edge ; Target                                           ;
+--------+--------------+----------------+------------------+---------------+------------+--------------------------------------------------+
; -1.380 ; 1.000        ; 2.380          ; Port Rate        ; inputdata1[0] ; Rise       ; inputdata1[0]                                    ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; inputdata1[0] ; Rise       ; inputdata1[0]|combout                            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; inputdata1[0] ; Rise       ; inputdata1[0]|combout                            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; inputdata1[0] ; Fall       ; mux_ula:seletor|y[0]                             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; inputdata1[0] ; Fall       ; mux_ula:seletor|y[0]                             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; inputdata1[0] ; Fall       ; mux_ula:seletor|y[1]                             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; inputdata1[0] ; Fall       ; mux_ula:seletor|y[1]                             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; inputdata1[0] ; Fall       ; mux_ula:seletor|y[2]                             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; inputdata1[0] ; Fall       ; mux_ula:seletor|y[2]                             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; inputdata1[0] ; Fall       ; mux_ula:seletor|y[3]                             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; inputdata1[0] ; Fall       ; mux_ula:seletor|y[3]                             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; inputdata1[0] ; Rise       ; seletor|y[0]|datad                               ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; inputdata1[0] ; Rise       ; seletor|y[0]|datad                               ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; inputdata1[0] ; Rise       ; seletor|y[1]|datad                               ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; inputdata1[0] ; Rise       ; seletor|y[1]|datad                               ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; inputdata1[0] ; Rise       ; seletor|y[2]|datad                               ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; inputdata1[0] ; Rise       ; seletor|y[2]|datad                               ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; inputdata1[0] ; Rise       ; seletor|y[3]|datad                               ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; inputdata1[0] ; Rise       ; seletor|y[3]|datad                               ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; inputdata1[0] ; Rise       ; seletor|y[3]~6clkctrl|inclk[0]                   ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; inputdata1[0] ; Rise       ; seletor|y[3]~6clkctrl|inclk[0]                   ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; inputdata1[0] ; Rise       ; seletor|y[3]~6clkctrl|outclk                     ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; inputdata1[0] ; Rise       ; seletor|y[3]~6clkctrl|outclk                     ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; inputdata1[0] ; Rise       ; seletor|y[3]~6|combout                           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; inputdata1[0] ; Rise       ; seletor|y[3]~6|combout                           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; inputdata1[0] ; Fall       ; seletor|y[3]~6|datad                             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; inputdata1[0] ; Fall       ; seletor|y[3]~6|datad                             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; inputdata1[0] ; Fall       ; subtracao|comparador_menor_q|resultmeq~1|combout ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; inputdata1[0] ; Fall       ; subtracao|comparador_menor_q|resultmeq~1|combout ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; inputdata1[0] ; Rise       ; subtracao|comparador_menor_q|resultmeq~1|datad   ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; inputdata1[0] ; Rise       ; subtracao|comparador_menor_q|resultmeq~1|datad   ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; inputdata1[0] ; Fall       ; subtracao|comparador_menor_q|resultmeq~3|combout ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; inputdata1[0] ; Fall       ; subtracao|comparador_menor_q|resultmeq~3|combout ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; inputdata1[0] ; Fall       ; subtracao|comparador_menor_q|resultmeq~3|datad   ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; inputdata1[0] ; Fall       ; subtracao|comparador_menor_q|resultmeq~3|datad   ;
+--------+--------------+----------------+------------------+---------------+------------+--------------------------------------------------+


+-----------------------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'operator[0]'                                                                         ;
+--------+--------------+----------------+------------------+-------------+------------+--------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock       ; Clock Edge ; Target                         ;
+--------+--------------+----------------+------------------+-------------+------------+--------------------------------+
; -1.380 ; 1.000        ; 2.380          ; Port Rate        ; operator[0] ; Rise       ; operator[0]                    ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; operator[0] ; Fall       ; mux_ula:seletor|ctrl[0]        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; operator[0] ; Fall       ; mux_ula:seletor|ctrl[0]        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; operator[0] ; Rise       ; mux_ula:seletor|saida_led      ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; operator[0] ; Rise       ; mux_ula:seletor|saida_led      ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; operator[0] ; Rise       ; mux_ula:seletor|y[0]           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; operator[0] ; Rise       ; mux_ula:seletor|y[0]           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; operator[0] ; Rise       ; mux_ula:seletor|y[1]           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; operator[0] ; Rise       ; mux_ula:seletor|y[1]           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; operator[0] ; Rise       ; mux_ula:seletor|y[2]           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; operator[0] ; Rise       ; mux_ula:seletor|y[2]           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; operator[0] ; Rise       ; mux_ula:seletor|y[3]           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; operator[0] ; Rise       ; mux_ula:seletor|y[3]           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; operator[0] ; Rise       ; operator[0]|combout            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; operator[0] ; Rise       ; operator[0]|combout            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; operator[0] ; Rise       ; seletor|ctrl[0]|dataa          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; operator[0] ; Rise       ; seletor|ctrl[0]|dataa          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; operator[0] ; Fall       ; seletor|saida_led|datab        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; operator[0] ; Fall       ; seletor|saida_led|datab        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; operator[0] ; Fall       ; seletor|saida_led~10|combout   ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; operator[0] ; Fall       ; seletor|saida_led~10|combout   ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; operator[0] ; Rise       ; seletor|saida_led~10|datad     ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; operator[0] ; Rise       ; seletor|saida_led~10|datad     ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; operator[0] ; Rise       ; seletor|saida_led~11|combout   ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; operator[0] ; Rise       ; seletor|saida_led~11|combout   ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; operator[0] ; Rise       ; seletor|saida_led~11|datad     ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; operator[0] ; Rise       ; seletor|saida_led~11|datad     ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; operator[0] ; Fall       ; seletor|y[0]|datad             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; operator[0] ; Fall       ; seletor|y[0]|datad             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; operator[0] ; Fall       ; seletor|y[1]|datad             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; operator[0] ; Fall       ; seletor|y[1]|datad             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; operator[0] ; Fall       ; seletor|y[2]|datad             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; operator[0] ; Fall       ; seletor|y[2]|datad             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; operator[0] ; Fall       ; seletor|y[3]|datad             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; operator[0] ; Fall       ; seletor|y[3]|datad             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; operator[0] ; Fall       ; seletor|y[3]~6clkctrl|inclk[0] ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; operator[0] ; Fall       ; seletor|y[3]~6clkctrl|inclk[0] ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; operator[0] ; Fall       ; seletor|y[3]~6clkctrl|outclk   ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; operator[0] ; Fall       ; seletor|y[3]~6clkctrl|outclk   ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; operator[0] ; Fall       ; seletor|y[3]~6|combout         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; operator[0] ; Fall       ; seletor|y[3]~6|combout         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; operator[0] ; Rise       ; seletor|y[3]~6|datab           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; operator[0] ; Rise       ; seletor|y[3]~6|datab           ;
+--------+--------------+----------------+------------------+-------------+------------+--------------------------------+


+---------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'key_0'                                                                 ;
+--------+--------------+----------------+------------------+-------+------------+------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock ; Clock Edge ; Target                 ;
+--------+--------------+----------------+------------------+-------+------------+------------------------+
; -1.222 ; 1.000        ; 2.222          ; Port Rate        ; key_0 ; Rise       ; key_0                  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; key_0 ; Rise       ; button:button|keyonoff ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; key_0 ; Rise       ; button:button|keyonoff ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; key_0 ; Rise       ; button|keyonoff|clk    ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; key_0 ; Rise       ; button|keyonoff|clk    ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; key_0 ; Rise       ; key_0|combout          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; key_0 ; Rise       ; key_0|combout          ;
+--------+--------------+----------------+------------------+-------+------------+------------------------+


+----------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'mux_ula:seletor|ctrl[0]'                                                                                    ;
+-------+--------------+----------------+------------------+-------------------------+------------+--------------------------------------------+
; Slack ; Actual Width ; Required Width ; Type             ; Clock                   ; Clock Edge ; Target                                     ;
+-------+--------------+----------------+------------------+-------------------------+------------+--------------------------------------------+
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; mux_ula:seletor|ctrl[0] ; Rise       ; convdisplay:conversor_display|display[0]   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; mux_ula:seletor|ctrl[0] ; Rise       ; convdisplay:conversor_display|display[0]   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; mux_ula:seletor|ctrl[0] ; Rise       ; convdisplay:conversor_display|display[3]   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; mux_ula:seletor|ctrl[0] ; Rise       ; convdisplay:conversor_display|display[3]   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; mux_ula:seletor|ctrl[0] ; Rise       ; conversor_display|Equal0~0clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; mux_ula:seletor|ctrl[0] ; Rise       ; conversor_display|Equal0~0clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; mux_ula:seletor|ctrl[0] ; Rise       ; conversor_display|Equal0~0clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; mux_ula:seletor|ctrl[0] ; Rise       ; conversor_display|Equal0~0clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; mux_ula:seletor|ctrl[0] ; Rise       ; conversor_display|Equal0~0|combout         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; mux_ula:seletor|ctrl[0] ; Rise       ; conversor_display|Equal0~0|combout         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; mux_ula:seletor|ctrl[0] ; Rise       ; conversor_display|Equal0~0|datad           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; mux_ula:seletor|ctrl[0] ; Rise       ; conversor_display|Equal0~0|datad           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; mux_ula:seletor|ctrl[0] ; Rise       ; conversor_display|display[0]|datac         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; mux_ula:seletor|ctrl[0] ; Rise       ; conversor_display|display[0]|datac         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; mux_ula:seletor|ctrl[0] ; Rise       ; conversor_display|display[3]|datac         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; mux_ula:seletor|ctrl[0] ; Rise       ; conversor_display|display[3]|datac         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; mux_ula:seletor|ctrl[0] ; Rise       ; seletor|ctrl[0]|combout                    ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; mux_ula:seletor|ctrl[0] ; Rise       ; seletor|ctrl[0]|combout                    ;
+-------+--------------+----------------+------------------+-------------------------+------------+--------------------------------------------+


+-------------------------------------------------------------------------------+
; Setup Times                                                                   ;
+----------------+---------------+-------+-------+------------+-----------------+
; Data Port      ; Clock Port    ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+----------------+---------------+-------+-------+------------+-----------------+
; inputdata1[*]  ; inputdata1[0] ; 1.784 ; 1.784 ; Fall       ; inputdata1[0]   ;
;  inputdata1[0] ; inputdata1[0] ; 0.489 ; 0.489 ; Fall       ; inputdata1[0]   ;
;  inputdata1[1] ; inputdata1[0] ; 0.579 ; 0.579 ; Fall       ; inputdata1[0]   ;
;  inputdata1[2] ; inputdata1[0] ; 1.784 ; 1.784 ; Fall       ; inputdata1[0]   ;
;  inputdata1[3] ; inputdata1[0] ; 1.646 ; 1.646 ; Fall       ; inputdata1[0]   ;
; inputdata2[*]  ; inputdata1[0] ; 6.493 ; 6.493 ; Fall       ; inputdata1[0]   ;
;  inputdata2[0] ; inputdata1[0] ; 6.493 ; 6.493 ; Fall       ; inputdata1[0]   ;
;  inputdata2[1] ; inputdata1[0] ; 5.624 ; 5.624 ; Fall       ; inputdata1[0]   ;
;  inputdata2[2] ; inputdata1[0] ; 6.128 ; 6.128 ; Fall       ; inputdata1[0]   ;
;  inputdata2[3] ; inputdata1[0] ; 6.458 ; 6.458 ; Fall       ; inputdata1[0]   ;
; operator[*]    ; inputdata1[0] ; 1.485 ; 1.485 ; Fall       ; inputdata1[0]   ;
;  operator[0]   ; inputdata1[0] ; 0.259 ; 0.259 ; Fall       ; inputdata1[0]   ;
;  operator[1]   ; inputdata1[0] ; 0.687 ; 0.687 ; Fall       ; inputdata1[0]   ;
;  operator[2]   ; inputdata1[0] ; 1.485 ; 1.485 ; Fall       ; inputdata1[0]   ;
; inputdata1[*]  ; operator[0]   ; 3.938 ; 3.938 ; Rise       ; operator[0]     ;
;  inputdata1[0] ; operator[0]   ; 2.722 ; 2.722 ; Rise       ; operator[0]     ;
;  inputdata1[1] ; operator[0]   ; 2.954 ; 2.954 ; Rise       ; operator[0]     ;
;  inputdata1[2] ; operator[0]   ; 3.938 ; 3.938 ; Rise       ; operator[0]     ;
;  inputdata1[3] ; operator[0]   ; 3.800 ; 3.800 ; Rise       ; operator[0]     ;
; inputdata2[*]  ; operator[0]   ; 8.647 ; 8.647 ; Rise       ; operator[0]     ;
;  inputdata2[0] ; operator[0]   ; 8.647 ; 8.647 ; Rise       ; operator[0]     ;
;  inputdata2[1] ; operator[0]   ; 7.778 ; 7.778 ; Rise       ; operator[0]     ;
;  inputdata2[2] ; operator[0]   ; 8.282 ; 8.282 ; Rise       ; operator[0]     ;
;  inputdata2[3] ; operator[0]   ; 8.612 ; 8.612 ; Rise       ; operator[0]     ;
; operator[*]    ; operator[0]   ; 4.040 ; 4.040 ; Rise       ; operator[0]     ;
;  operator[0]   ; operator[0]   ; 1.595 ; 1.595 ; Rise       ; operator[0]     ;
;  operator[1]   ; operator[0]   ; 4.040 ; 4.040 ; Rise       ; operator[0]     ;
;  operator[2]   ; operator[0]   ; 3.935 ; 3.935 ; Rise       ; operator[0]     ;
; inputdata1[*]  ; operator[0]   ; 3.569 ; 3.569 ; Fall       ; operator[0]     ;
;  inputdata1[0] ; operator[0]   ; 2.274 ; 2.274 ; Fall       ; operator[0]     ;
;  inputdata1[1] ; operator[0]   ; 2.364 ; 2.364 ; Fall       ; operator[0]     ;
;  inputdata1[2] ; operator[0]   ; 3.569 ; 3.569 ; Fall       ; operator[0]     ;
;  inputdata1[3] ; operator[0]   ; 3.431 ; 3.431 ; Fall       ; operator[0]     ;
; inputdata2[*]  ; operator[0]   ; 8.278 ; 8.278 ; Fall       ; operator[0]     ;
;  inputdata2[0] ; operator[0]   ; 8.278 ; 8.278 ; Fall       ; operator[0]     ;
;  inputdata2[1] ; operator[0]   ; 7.409 ; 7.409 ; Fall       ; operator[0]     ;
;  inputdata2[2] ; operator[0]   ; 7.913 ; 7.913 ; Fall       ; operator[0]     ;
;  inputdata2[3] ; operator[0]   ; 8.243 ; 8.243 ; Fall       ; operator[0]     ;
; operator[*]    ; operator[0]   ; 2.424 ; 2.424 ; Fall       ; operator[0]     ;
;  operator[0]   ; operator[0]   ; 1.175 ; 1.175 ; Fall       ; operator[0]     ;
;  operator[1]   ; operator[0]   ; 1.533 ; 1.533 ; Fall       ; operator[0]     ;
;  operator[2]   ; operator[0]   ; 2.424 ; 2.424 ; Fall       ; operator[0]     ;
+----------------+---------------+-------+-------+------------+-----------------+


+---------------------------------------------------------------------------------+
; Hold Times                                                                      ;
+----------------+---------------+--------+--------+------------+-----------------+
; Data Port      ; Clock Port    ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+----------------+---------------+--------+--------+------------+-----------------+
; inputdata1[*]  ; inputdata1[0] ; 3.353  ; 3.353  ; Fall       ; inputdata1[0]   ;
;  inputdata1[0] ; inputdata1[0] ; 1.052  ; 1.052  ; Fall       ; inputdata1[0]   ;
;  inputdata1[1] ; inputdata1[0] ; 2.886  ; 2.886  ; Fall       ; inputdata1[0]   ;
;  inputdata1[2] ; inputdata1[0] ; 3.353  ; 3.353  ; Fall       ; inputdata1[0]   ;
;  inputdata1[3] ; inputdata1[0] ; 2.234  ; 2.234  ; Fall       ; inputdata1[0]   ;
; inputdata2[*]  ; inputdata1[0] ; -1.935 ; -1.935 ; Fall       ; inputdata1[0]   ;
;  inputdata2[0] ; inputdata1[0] ; -1.935 ; -1.935 ; Fall       ; inputdata1[0]   ;
;  inputdata2[1] ; inputdata1[0] ; -2.968 ; -2.968 ; Fall       ; inputdata1[0]   ;
;  inputdata2[2] ; inputdata1[0] ; -2.592 ; -2.592 ; Fall       ; inputdata1[0]   ;
;  inputdata2[3] ; inputdata1[0] ; -3.053 ; -3.053 ; Fall       ; inputdata1[0]   ;
; operator[*]    ; inputdata1[0] ; 2.014  ; 2.014  ; Fall       ; inputdata1[0]   ;
;  operator[0]   ; inputdata1[0] ; 1.011  ; 1.011  ; Fall       ; inputdata1[0]   ;
;  operator[1]   ; inputdata1[0] ; 1.784  ; 1.784  ; Fall       ; inputdata1[0]   ;
;  operator[2]   ; inputdata1[0] ; 2.014  ; 2.014  ; Fall       ; inputdata1[0]   ;
; inputdata1[*]  ; operator[0]   ; 2.585  ; 2.585  ; Rise       ; operator[0]     ;
;  inputdata1[0] ; operator[0]   ; 0.284  ; 0.284  ; Rise       ; operator[0]     ;
;  inputdata1[1] ; operator[0]   ; 2.118  ; 2.118  ; Rise       ; operator[0]     ;
;  inputdata1[2] ; operator[0]   ; 2.585  ; 2.585  ; Rise       ; operator[0]     ;
;  inputdata1[3] ; operator[0]   ; 1.466  ; 1.466  ; Rise       ; operator[0]     ;
; inputdata2[*]  ; operator[0]   ; -2.703 ; -2.703 ; Rise       ; operator[0]     ;
;  inputdata2[0] ; operator[0]   ; -2.703 ; -2.703 ; Rise       ; operator[0]     ;
;  inputdata2[1] ; operator[0]   ; -3.736 ; -3.736 ; Rise       ; operator[0]     ;
;  inputdata2[2] ; operator[0]   ; -3.360 ; -3.360 ; Rise       ; operator[0]     ;
;  inputdata2[3] ; operator[0]   ; -3.821 ; -3.821 ; Rise       ; operator[0]     ;
; operator[*]    ; operator[0]   ; 1.246  ; 1.246  ; Rise       ; operator[0]     ;
;  operator[0]   ; operator[0]   ; 0.243  ; 0.243  ; Rise       ; operator[0]     ;
;  operator[1]   ; operator[0]   ; 1.016  ; 1.016  ; Rise       ; operator[0]     ;
;  operator[2]   ; operator[0]   ; 1.246  ; 1.246  ; Rise       ; operator[0]     ;
; inputdata1[*]  ; operator[0]   ; -1.156 ; -1.156 ; Fall       ; operator[0]     ;
;  inputdata1[0] ; operator[0]   ; -1.156 ; -1.156 ; Fall       ; operator[0]     ;
;  inputdata1[1] ; operator[0]   ; -1.246 ; -1.246 ; Fall       ; operator[0]     ;
;  inputdata1[2] ; operator[0]   ; -1.799 ; -1.799 ; Fall       ; operator[0]     ;
;  inputdata1[3] ; operator[0]   ; -1.692 ; -1.692 ; Fall       ; operator[0]     ;
; inputdata2[*]  ; operator[0]   ; -6.142 ; -6.142 ; Fall       ; operator[0]     ;
;  inputdata2[0] ; operator[0]   ; -7.160 ; -7.160 ; Fall       ; operator[0]     ;
;  inputdata2[1] ; operator[0]   ; -6.291 ; -6.291 ; Fall       ; operator[0]     ;
;  inputdata2[2] ; operator[0]   ; -6.142 ; -6.142 ; Fall       ; operator[0]     ;
;  inputdata2[3] ; operator[0]   ; -6.477 ; -6.477 ; Fall       ; operator[0]     ;
; operator[*]    ; operator[0]   ; -0.057 ; -0.057 ; Fall       ; operator[0]     ;
;  operator[0]   ; operator[0]   ; -0.057 ; -0.057 ; Fall       ; operator[0]     ;
;  operator[1]   ; operator[0]   ; -0.415 ; -0.415 ; Fall       ; operator[0]     ;
;  operator[2]   ; operator[0]   ; -1.306 ; -1.306 ; Fall       ; operator[0]     ;
+----------------+---------------+--------+--------+------------+-----------------+


+------------------------------------------------------------------------------------------------+
; Clock to Output Times                                                                          ;
+-------------+-------------------------+--------+--------+------------+-------------------------+
; Data Port   ; Clock Port              ; Rise   ; Fall   ; Clock Edge ; Clock Reference         ;
+-------------+-------------------------+--------+--------+------------+-------------------------+
; display[*]  ; inputdata1[0]           ; 14.343 ; 14.343 ; Fall       ; inputdata1[0]           ;
;  display[1] ; inputdata1[0]           ; 14.264 ; 14.264 ; Fall       ; inputdata1[0]           ;
;  display[2] ; inputdata1[0]           ; 14.261 ; 14.261 ; Fall       ; inputdata1[0]           ;
;  display[4] ; inputdata1[0]           ; 14.343 ; 14.343 ; Fall       ; inputdata1[0]           ;
;  display[5] ; inputdata1[0]           ; 13.866 ; 13.866 ; Fall       ; inputdata1[0]           ;
;  display[6] ; inputdata1[0]           ; 13.904 ; 13.904 ; Fall       ; inputdata1[0]           ;
; display[*]  ; mux_ula:seletor|ctrl[0] ; 9.146  ; 9.146  ; Rise       ; mux_ula:seletor|ctrl[0] ;
;  display[0] ; mux_ula:seletor|ctrl[0] ; 8.785  ; 8.785  ; Rise       ; mux_ula:seletor|ctrl[0] ;
;  display[1] ; mux_ula:seletor|ctrl[0] ; 9.099  ; 9.099  ; Rise       ; mux_ula:seletor|ctrl[0] ;
;  display[2] ; mux_ula:seletor|ctrl[0] ; 9.126  ; 9.126  ; Rise       ; mux_ula:seletor|ctrl[0] ;
;  display[3] ; mux_ula:seletor|ctrl[0] ; 8.659  ; 8.659  ; Rise       ; mux_ula:seletor|ctrl[0] ;
;  display[4] ; mux_ula:seletor|ctrl[0] ; 9.146  ; 9.146  ; Rise       ; mux_ula:seletor|ctrl[0] ;
;  display[5] ; mux_ula:seletor|ctrl[0] ; 8.694  ; 8.694  ; Rise       ; mux_ula:seletor|ctrl[0] ;
;  display[6] ; mux_ula:seletor|ctrl[0] ; 8.767  ; 8.767  ; Rise       ; mux_ula:seletor|ctrl[0] ;
; display[*]  ; mux_ula:seletor|ctrl[0] ; 9.146  ; 9.146  ; Fall       ; mux_ula:seletor|ctrl[0] ;
;  display[1] ; mux_ula:seletor|ctrl[0] ; 9.099  ; 9.099  ; Fall       ; mux_ula:seletor|ctrl[0] ;
;  display[2] ; mux_ula:seletor|ctrl[0] ; 9.126  ; 9.126  ; Fall       ; mux_ula:seletor|ctrl[0] ;
;  display[4] ; mux_ula:seletor|ctrl[0] ; 9.146  ; 9.146  ; Fall       ; mux_ula:seletor|ctrl[0] ;
;  display[5] ; mux_ula:seletor|ctrl[0] ; 8.694  ; 8.694  ; Fall       ; mux_ula:seletor|ctrl[0] ;
;  display[6] ; mux_ula:seletor|ctrl[0] ; 8.767  ; 8.767  ; Fall       ; mux_ula:seletor|ctrl[0] ;
; display[*]  ; operator[0]             ; 13.575 ; 13.575 ; Rise       ; operator[0]             ;
;  display[1] ; operator[0]             ; 13.496 ; 13.496 ; Rise       ; operator[0]             ;
;  display[2] ; operator[0]             ; 13.493 ; 13.493 ; Rise       ; operator[0]             ;
;  display[4] ; operator[0]             ; 13.575 ; 13.575 ; Rise       ; operator[0]             ;
;  display[5] ; operator[0]             ; 13.098 ; 13.098 ; Rise       ; operator[0]             ;
;  display[6] ; operator[0]             ; 13.136 ; 13.136 ; Rise       ; operator[0]             ;
; led         ; operator[0]             ; 9.582  ; 9.582  ; Rise       ; operator[0]             ;
+-------------+-------------------------+--------+--------+------------+-------------------------+


+------------------------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                                  ;
+-------------+-------------------------+--------+--------+------------+-------------------------+
; Data Port   ; Clock Port              ; Rise   ; Fall   ; Clock Edge ; Clock Reference         ;
+-------------+-------------------------+--------+--------+------------+-------------------------+
; display[*]  ; inputdata1[0]           ; 13.632 ; 13.632 ; Fall       ; inputdata1[0]           ;
;  display[1] ; inputdata1[0]           ; 14.026 ; 14.026 ; Fall       ; inputdata1[0]           ;
;  display[2] ; inputdata1[0]           ; 14.037 ; 14.037 ; Fall       ; inputdata1[0]           ;
;  display[4] ; inputdata1[0]           ; 14.116 ; 14.116 ; Fall       ; inputdata1[0]           ;
;  display[5] ; inputdata1[0]           ; 13.632 ; 13.632 ; Fall       ; inputdata1[0]           ;
;  display[6] ; inputdata1[0]           ; 13.669 ; 13.669 ; Fall       ; inputdata1[0]           ;
; display[*]  ; mux_ula:seletor|ctrl[0] ; 8.659  ; 6.140  ; Rise       ; mux_ula:seletor|ctrl[0] ;
;  display[0] ; mux_ula:seletor|ctrl[0] ; 8.785  ; 8.785  ; Rise       ; mux_ula:seletor|ctrl[0] ;
;  display[1] ; mux_ula:seletor|ctrl[0] ; 9.099  ; 6.401  ; Rise       ; mux_ula:seletor|ctrl[0] ;
;  display[2] ; mux_ula:seletor|ctrl[0] ; 9.126  ; 6.391  ; Rise       ; mux_ula:seletor|ctrl[0] ;
;  display[3] ; mux_ula:seletor|ctrl[0] ; 8.659  ; 8.659  ; Rise       ; mux_ula:seletor|ctrl[0] ;
;  display[4] ; mux_ula:seletor|ctrl[0] ; 9.146  ; 6.595  ; Rise       ; mux_ula:seletor|ctrl[0] ;
;  display[5] ; mux_ula:seletor|ctrl[0] ; 8.694  ; 6.140  ; Rise       ; mux_ula:seletor|ctrl[0] ;
;  display[6] ; mux_ula:seletor|ctrl[0] ; 8.767  ; 6.211  ; Rise       ; mux_ula:seletor|ctrl[0] ;
; display[*]  ; mux_ula:seletor|ctrl[0] ; 6.140  ; 8.694  ; Fall       ; mux_ula:seletor|ctrl[0] ;
;  display[1] ; mux_ula:seletor|ctrl[0] ; 6.401  ; 9.099  ; Fall       ; mux_ula:seletor|ctrl[0] ;
;  display[2] ; mux_ula:seletor|ctrl[0] ; 6.391  ; 9.126  ; Fall       ; mux_ula:seletor|ctrl[0] ;
;  display[4] ; mux_ula:seletor|ctrl[0] ; 6.595  ; 9.146  ; Fall       ; mux_ula:seletor|ctrl[0] ;
;  display[5] ; mux_ula:seletor|ctrl[0] ; 6.140  ; 8.694  ; Fall       ; mux_ula:seletor|ctrl[0] ;
;  display[6] ; mux_ula:seletor|ctrl[0] ; 6.211  ; 8.767  ; Fall       ; mux_ula:seletor|ctrl[0] ;
; display[*]  ; operator[0]             ; 12.864 ; 12.864 ; Rise       ; operator[0]             ;
;  display[1] ; operator[0]             ; 13.258 ; 13.258 ; Rise       ; operator[0]             ;
;  display[2] ; operator[0]             ; 13.269 ; 13.269 ; Rise       ; operator[0]             ;
;  display[4] ; operator[0]             ; 13.348 ; 13.348 ; Rise       ; operator[0]             ;
;  display[5] ; operator[0]             ; 12.864 ; 12.864 ; Rise       ; operator[0]             ;
;  display[6] ; operator[0]             ; 12.901 ; 12.901 ; Rise       ; operator[0]             ;
; led         ; operator[0]             ; 9.582  ; 9.582  ; Rise       ; operator[0]             ;
+-------------+-------------------------+--------+--------+------------+-------------------------+


+--------------------------------------------------+
; Fast Model Setup Summary                         ;
+-------------------------+--------+---------------+
; Clock                   ; Slack  ; End Point TNS ;
+-------------------------+--------+---------------+
; mux_ula:seletor|ctrl[0] ; -1.932 ; -3.863        ;
; operator[0]             ; -0.600 ; -1.059        ;
; key_0                   ; 0.665  ; 0.000         ;
; inputdata1[0]           ; 0.674  ; 0.000         ;
+-------------------------+--------+---------------+


+--------------------------------------------------+
; Fast Model Hold Summary                          ;
+-------------------------+--------+---------------+
; Clock                   ; Slack  ; End Point TNS ;
+-------------------------+--------+---------------+
; inputdata1[0]           ; -0.797 ; -3.090        ;
; operator[0]             ; -0.477 ; -1.810        ;
; key_0                   ; 0.215  ; 0.000         ;
; mux_ula:seletor|ctrl[0] ; 1.567  ; 0.000         ;
+-------------------------+--------+---------------+


+--------------------------------------------------+
; Fast Model Recovery Summary                      ;
+-------------------------+--------+---------------+
; Clock                   ; Slack  ; End Point TNS ;
+-------------------------+--------+---------------+
; operator[0]             ; -0.589 ; -0.589        ;
; mux_ula:seletor|ctrl[0] ; 1.510  ; 0.000         ;
+-------------------------+--------+---------------+


+--------------------------------------------------+
; Fast Model Removal Summary                       ;
+-------------------------+--------+---------------+
; Clock                   ; Slack  ; End Point TNS ;
+-------------------------+--------+---------------+
; mux_ula:seletor|ctrl[0] ; -1.418 ; -2.835        ;
; operator[0]             ; -0.078 ; -0.078        ;
+-------------------------+--------+---------------+


+--------------------------------------------------+
; Fast Model Minimum Pulse Width Summary           ;
+-------------------------+--------+---------------+
; Clock                   ; Slack  ; End Point TNS ;
+-------------------------+--------+---------------+
; inputdata1[0]           ; -1.380 ; -1.380        ;
; operator[0]             ; -1.380 ; -1.380        ;
; key_0                   ; -1.222 ; -2.222        ;
; mux_ula:seletor|ctrl[0] ; 0.500  ; 0.000         ;
+-------------------------+--------+---------------+


+-------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'mux_ula:seletor|ctrl[0]'                                                                                                                 ;
+--------+----------------------+------------------------------------------+---------------+-------------------------+--------------+------------+------------+
; Slack  ; From Node            ; To Node                                  ; Launch Clock  ; Latch Clock             ; Relationship ; Clock Skew ; Data Delay ;
+--------+----------------------+------------------------------------------+---------------+-------------------------+--------------+------------+------------+
; -1.932 ; mux_ula:seletor|y[1] ; convdisplay:conversor_display|display[0] ; inputdata1[0] ; mux_ula:seletor|ctrl[0] ; 0.500        ; -1.542     ; 0.483      ;
; -1.931 ; mux_ula:seletor|y[1] ; convdisplay:conversor_display|display[3] ; inputdata1[0] ; mux_ula:seletor|ctrl[0] ; 0.500        ; -1.541     ; 0.483      ;
; -1.914 ; mux_ula:seletor|y[2] ; convdisplay:conversor_display|display[0] ; inputdata1[0] ; mux_ula:seletor|ctrl[0] ; 0.500        ; -1.542     ; 0.465      ;
; -1.913 ; mux_ula:seletor|y[2] ; convdisplay:conversor_display|display[3] ; inputdata1[0] ; mux_ula:seletor|ctrl[0] ; 0.500        ; -1.541     ; 0.465      ;
; -1.847 ; mux_ula:seletor|y[3] ; convdisplay:conversor_display|display[0] ; inputdata1[0] ; mux_ula:seletor|ctrl[0] ; 0.500        ; -1.539     ; 0.401      ;
; -1.845 ; mux_ula:seletor|y[3] ; convdisplay:conversor_display|display[3] ; inputdata1[0] ; mux_ula:seletor|ctrl[0] ; 0.500        ; -1.538     ; 0.400      ;
; -1.795 ; mux_ula:seletor|y[0] ; convdisplay:conversor_display|display[0] ; inputdata1[0] ; mux_ula:seletor|ctrl[0] ; 0.500        ; -1.539     ; 0.349      ;
; -1.794 ; mux_ula:seletor|y[0] ; convdisplay:conversor_display|display[3] ; inputdata1[0] ; mux_ula:seletor|ctrl[0] ; 0.500        ; -1.538     ; 0.349      ;
; -1.112 ; mux_ula:seletor|y[1] ; convdisplay:conversor_display|display[0] ; operator[0]   ; mux_ula:seletor|ctrl[0] ; 1.000        ; -1.222     ; 0.483      ;
; -1.111 ; mux_ula:seletor|y[1] ; convdisplay:conversor_display|display[3] ; operator[0]   ; mux_ula:seletor|ctrl[0] ; 1.000        ; -1.221     ; 0.483      ;
; -1.094 ; mux_ula:seletor|y[2] ; convdisplay:conversor_display|display[0] ; operator[0]   ; mux_ula:seletor|ctrl[0] ; 1.000        ; -1.222     ; 0.465      ;
; -1.093 ; mux_ula:seletor|y[2] ; convdisplay:conversor_display|display[3] ; operator[0]   ; mux_ula:seletor|ctrl[0] ; 1.000        ; -1.221     ; 0.465      ;
; -1.027 ; mux_ula:seletor|y[3] ; convdisplay:conversor_display|display[0] ; operator[0]   ; mux_ula:seletor|ctrl[0] ; 1.000        ; -1.219     ; 0.401      ;
; -1.025 ; mux_ula:seletor|y[3] ; convdisplay:conversor_display|display[3] ; operator[0]   ; mux_ula:seletor|ctrl[0] ; 1.000        ; -1.218     ; 0.400      ;
; -0.975 ; mux_ula:seletor|y[0] ; convdisplay:conversor_display|display[0] ; operator[0]   ; mux_ula:seletor|ctrl[0] ; 1.000        ; -1.219     ; 0.349      ;
; -0.974 ; mux_ula:seletor|y[0] ; convdisplay:conversor_display|display[3] ; operator[0]   ; mux_ula:seletor|ctrl[0] ; 1.000        ; -1.218     ; 0.349      ;
+--------+----------------------+------------------------------------------+---------------+-------------------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'operator[0]'                                                                                           ;
+--------+---------------+---------------------------+---------------+-------------+--------------+------------+------------+
; Slack  ; From Node     ; To Node                   ; Launch Clock  ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+---------------+---------------------------+---------------+-------------+--------------+------------+------------+
; -0.600 ; inputdata1[0] ; mux_ula:seletor|saida_led ; inputdata1[0] ; operator[0] ; 0.500        ; 1.700      ; 2.331      ;
; -0.459 ; inputdata1[0] ; mux_ula:seletor|ctrl[0]   ; inputdata1[0] ; operator[0] ; 0.500        ; 1.609      ; 2.090      ;
; -0.137 ; operator[0]   ; mux_ula:seletor|saida_led ; operator[0]   ; operator[0] ; 0.500        ; 1.700      ; 1.868      ;
; -0.100 ; inputdata1[0] ; mux_ula:seletor|saida_led ; inputdata1[0] ; operator[0] ; 1.000        ; 1.700      ; 2.331      ;
; 0.003  ; operator[0]   ; mux_ula:seletor|ctrl[0]   ; operator[0]   ; operator[0] ; 0.500        ; 1.609      ; 1.628      ;
; 0.041  ; inputdata1[0] ; mux_ula:seletor|ctrl[0]   ; inputdata1[0] ; operator[0] ; 1.000        ; 1.609      ; 2.090      ;
; 0.354  ; inputdata1[0] ; mux_ula:seletor|y[2]      ; inputdata1[0] ; operator[0] ; 0.500        ; 3.102      ; 2.777      ;
; 0.363  ; operator[0]   ; mux_ula:seletor|saida_led ; operator[0]   ; operator[0] ; 1.000        ; 1.700      ; 1.868      ;
; 0.425  ; operator[0]   ; mux_ula:seletor|y[2]      ; operator[0]   ; operator[0] ; 0.500        ; 3.102      ; 2.706      ;
; 0.503  ; operator[0]   ; mux_ula:seletor|ctrl[0]   ; operator[0]   ; operator[0] ; 1.000        ; 1.609      ; 1.628      ;
; 0.523  ; operator[0]   ; mux_ula:seletor|y[0]      ; operator[0]   ; operator[0] ; 0.500        ; 3.099      ; 2.713      ;
; 0.535  ; inputdata1[0] ; mux_ula:seletor|y[3]      ; inputdata1[0] ; operator[0] ; 0.500        ; 3.099      ; 2.779      ;
; 0.548  ; inputdata1[0] ; mux_ula:seletor|y[0]      ; inputdata1[0] ; operator[0] ; 0.500        ; 3.099      ; 2.688      ;
; 0.592  ; inputdata1[0] ; mux_ula:seletor|y[1]      ; inputdata1[0] ; operator[0] ; 0.500        ; 3.102      ; 2.728      ;
; 0.622  ; operator[0]   ; mux_ula:seletor|y[1]      ; operator[0]   ; operator[0] ; 0.500        ; 3.102      ; 2.698      ;
; 0.630  ; operator[0]   ; mux_ula:seletor|y[3]      ; operator[0]   ; operator[0] ; 0.500        ; 3.099      ; 2.684      ;
; 0.854  ; inputdata1[0] ; mux_ula:seletor|y[2]      ; inputdata1[0] ; operator[0] ; 1.000        ; 3.102      ; 2.777      ;
; 0.925  ; operator[0]   ; mux_ula:seletor|y[2]      ; operator[0]   ; operator[0] ; 1.000        ; 3.102      ; 2.706      ;
; 1.023  ; operator[0]   ; mux_ula:seletor|y[0]      ; operator[0]   ; operator[0] ; 1.000        ; 3.099      ; 2.713      ;
; 1.035  ; inputdata1[0] ; mux_ula:seletor|y[3]      ; inputdata1[0] ; operator[0] ; 1.000        ; 3.099      ; 2.779      ;
; 1.048  ; inputdata1[0] ; mux_ula:seletor|y[0]      ; inputdata1[0] ; operator[0] ; 1.000        ; 3.099      ; 2.688      ;
; 1.092  ; inputdata1[0] ; mux_ula:seletor|y[1]      ; inputdata1[0] ; operator[0] ; 1.000        ; 3.102      ; 2.728      ;
; 1.122  ; operator[0]   ; mux_ula:seletor|y[1]      ; operator[0]   ; operator[0] ; 1.000        ; 3.102      ; 2.698      ;
; 1.130  ; operator[0]   ; mux_ula:seletor|y[3]      ; operator[0]   ; operator[0] ; 1.000        ; 3.099      ; 2.684      ;
+--------+---------------+---------------------------+---------------+-------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'key_0'                                                                                                     ;
+-------+------------------------+------------------------+--------------+-------------+--------------+------------+------------+
; Slack ; From Node              ; To Node                ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+-------+------------------------+------------------------+--------------+-------------+--------------+------------+------------+
; 0.665 ; button:button|keyonoff ; button:button|keyonoff ; key_0        ; key_0       ; 1.000        ; 0.000      ; 0.367      ;
+-------+------------------------+------------------------+--------------+-------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'inputdata1[0]'                                                                                     ;
+-------+---------------+----------------------+---------------+---------------+--------------+------------+------------+
; Slack ; From Node     ; To Node              ; Launch Clock  ; Latch Clock   ; Relationship ; Clock Skew ; Data Delay ;
+-------+---------------+----------------------+---------------+---------------+--------------+------------+------------+
; 0.674 ; inputdata1[0] ; mux_ula:seletor|y[2] ; inputdata1[0] ; inputdata1[0] ; 0.500        ; 3.422      ; 2.777      ;
; 0.745 ; operator[0]   ; mux_ula:seletor|y[2] ; operator[0]   ; inputdata1[0] ; 0.500        ; 3.422      ; 2.706      ;
; 0.843 ; operator[0]   ; mux_ula:seletor|y[0] ; operator[0]   ; inputdata1[0] ; 0.500        ; 3.419      ; 2.713      ;
; 0.855 ; inputdata1[0] ; mux_ula:seletor|y[3] ; inputdata1[0] ; inputdata1[0] ; 0.500        ; 3.419      ; 2.779      ;
; 0.868 ; inputdata1[0] ; mux_ula:seletor|y[0] ; inputdata1[0] ; inputdata1[0] ; 0.500        ; 3.419      ; 2.688      ;
; 0.912 ; inputdata1[0] ; mux_ula:seletor|y[1] ; inputdata1[0] ; inputdata1[0] ; 0.500        ; 3.422      ; 2.728      ;
; 0.942 ; operator[0]   ; mux_ula:seletor|y[1] ; operator[0]   ; inputdata1[0] ; 0.500        ; 3.422      ; 2.698      ;
; 0.950 ; operator[0]   ; mux_ula:seletor|y[3] ; operator[0]   ; inputdata1[0] ; 0.500        ; 3.419      ; 2.684      ;
; 1.174 ; inputdata1[0] ; mux_ula:seletor|y[2] ; inputdata1[0] ; inputdata1[0] ; 1.000        ; 3.422      ; 2.777      ;
; 1.245 ; operator[0]   ; mux_ula:seletor|y[2] ; operator[0]   ; inputdata1[0] ; 1.000        ; 3.422      ; 2.706      ;
; 1.343 ; operator[0]   ; mux_ula:seletor|y[0] ; operator[0]   ; inputdata1[0] ; 1.000        ; 3.419      ; 2.713      ;
; 1.355 ; inputdata1[0] ; mux_ula:seletor|y[3] ; inputdata1[0] ; inputdata1[0] ; 1.000        ; 3.419      ; 2.779      ;
; 1.368 ; inputdata1[0] ; mux_ula:seletor|y[0] ; inputdata1[0] ; inputdata1[0] ; 1.000        ; 3.419      ; 2.688      ;
; 1.412 ; inputdata1[0] ; mux_ula:seletor|y[1] ; inputdata1[0] ; inputdata1[0] ; 1.000        ; 3.422      ; 2.728      ;
; 1.442 ; operator[0]   ; mux_ula:seletor|y[1] ; operator[0]   ; inputdata1[0] ; 1.000        ; 3.422      ; 2.698      ;
; 1.450 ; operator[0]   ; mux_ula:seletor|y[3] ; operator[0]   ; inputdata1[0] ; 1.000        ; 3.419      ; 2.684      ;
+-------+---------------+----------------------+---------------+---------------+--------------+------------+------------+


+------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'inputdata1[0]'                                                                                       ;
+--------+---------------+----------------------+---------------+---------------+--------------+------------+------------+
; Slack  ; From Node     ; To Node              ; Launch Clock  ; Latch Clock   ; Relationship ; Clock Skew ; Data Delay ;
+--------+---------------+----------------------+---------------+---------------+--------------+------------+------------+
; -0.797 ; inputdata1[0] ; mux_ula:seletor|y[0] ; inputdata1[0] ; inputdata1[0] ; 0.000        ; 3.419      ; 2.622      ;
; -0.784 ; operator[0]   ; mux_ula:seletor|y[3] ; operator[0]   ; inputdata1[0] ; 0.000        ; 3.419      ; 2.635      ;
; -0.760 ; inputdata1[0] ; mux_ula:seletor|y[3] ; inputdata1[0] ; inputdata1[0] ; 0.000        ; 3.419      ; 2.659      ;
; -0.755 ; inputdata1[0] ; mux_ula:seletor|y[2] ; inputdata1[0] ; inputdata1[0] ; 0.000        ; 3.422      ; 2.667      ;
; -0.754 ; inputdata1[0] ; mux_ula:seletor|y[1] ; inputdata1[0] ; inputdata1[0] ; 0.000        ; 3.422      ; 2.668      ;
; -0.749 ; operator[0]   ; mux_ula:seletor|y[2] ; operator[0]   ; inputdata1[0] ; 0.000        ; 3.422      ; 2.673      ;
; -0.734 ; operator[0]   ; mux_ula:seletor|y[1] ; operator[0]   ; inputdata1[0] ; 0.000        ; 3.422      ; 2.688      ;
; -0.706 ; operator[0]   ; mux_ula:seletor|y[0] ; operator[0]   ; inputdata1[0] ; 0.000        ; 3.419      ; 2.713      ;
; -0.297 ; inputdata1[0] ; mux_ula:seletor|y[0] ; inputdata1[0] ; inputdata1[0] ; -0.500       ; 3.419      ; 2.622      ;
; -0.284 ; operator[0]   ; mux_ula:seletor|y[3] ; operator[0]   ; inputdata1[0] ; -0.500       ; 3.419      ; 2.635      ;
; -0.260 ; inputdata1[0] ; mux_ula:seletor|y[3] ; inputdata1[0] ; inputdata1[0] ; -0.500       ; 3.419      ; 2.659      ;
; -0.255 ; inputdata1[0] ; mux_ula:seletor|y[2] ; inputdata1[0] ; inputdata1[0] ; -0.500       ; 3.422      ; 2.667      ;
; -0.254 ; inputdata1[0] ; mux_ula:seletor|y[1] ; inputdata1[0] ; inputdata1[0] ; -0.500       ; 3.422      ; 2.668      ;
; -0.249 ; operator[0]   ; mux_ula:seletor|y[2] ; operator[0]   ; inputdata1[0] ; -0.500       ; 3.422      ; 2.673      ;
; -0.234 ; operator[0]   ; mux_ula:seletor|y[1] ; operator[0]   ; inputdata1[0] ; -0.500       ; 3.422      ; 2.688      ;
; -0.206 ; operator[0]   ; mux_ula:seletor|y[0] ; operator[0]   ; inputdata1[0] ; -0.500       ; 3.419      ; 2.713      ;
+--------+---------------+----------------------+---------------+---------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'operator[0]'                                                                                            ;
+--------+---------------+---------------------------+---------------+-------------+--------------+------------+------------+
; Slack  ; From Node     ; To Node                   ; Launch Clock  ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+---------------+---------------------------+---------------+-------------+--------------+------------+------------+
; -0.477 ; inputdata1[0] ; mux_ula:seletor|y[0]      ; inputdata1[0] ; operator[0] ; 0.000        ; 3.099      ; 2.622      ;
; -0.464 ; operator[0]   ; mux_ula:seletor|y[3]      ; operator[0]   ; operator[0] ; 0.000        ; 3.099      ; 2.635      ;
; -0.440 ; inputdata1[0] ; mux_ula:seletor|y[3]      ; inputdata1[0] ; operator[0] ; 0.000        ; 3.099      ; 2.659      ;
; -0.435 ; inputdata1[0] ; mux_ula:seletor|y[2]      ; inputdata1[0] ; operator[0] ; 0.000        ; 3.102      ; 2.667      ;
; -0.434 ; inputdata1[0] ; mux_ula:seletor|y[1]      ; inputdata1[0] ; operator[0] ; 0.000        ; 3.102      ; 2.668      ;
; -0.429 ; operator[0]   ; mux_ula:seletor|y[2]      ; operator[0]   ; operator[0] ; 0.000        ; 3.102      ; 2.673      ;
; -0.414 ; operator[0]   ; mux_ula:seletor|y[1]      ; operator[0]   ; operator[0] ; 0.000        ; 3.102      ; 2.688      ;
; -0.386 ; operator[0]   ; mux_ula:seletor|y[0]      ; operator[0]   ; operator[0] ; 0.000        ; 3.099      ; 2.713      ;
; 0.019  ; operator[0]   ; mux_ula:seletor|ctrl[0]   ; operator[0]   ; operator[0] ; 0.000        ; 1.609      ; 1.628      ;
; 0.023  ; inputdata1[0] ; mux_ula:seletor|y[0]      ; inputdata1[0] ; operator[0] ; -0.500       ; 3.099      ; 2.622      ;
; 0.027  ; operator[0]   ; mux_ula:seletor|saida_led ; operator[0]   ; operator[0] ; 0.000        ; 1.700      ; 1.727      ;
; 0.036  ; operator[0]   ; mux_ula:seletor|y[3]      ; operator[0]   ; operator[0] ; -0.500       ; 3.099      ; 2.635      ;
; 0.060  ; inputdata1[0] ; mux_ula:seletor|y[3]      ; inputdata1[0] ; operator[0] ; -0.500       ; 3.099      ; 2.659      ;
; 0.065  ; inputdata1[0] ; mux_ula:seletor|y[2]      ; inputdata1[0] ; operator[0] ; -0.500       ; 3.102      ; 2.667      ;
; 0.066  ; inputdata1[0] ; mux_ula:seletor|y[1]      ; inputdata1[0] ; operator[0] ; -0.500       ; 3.102      ; 2.668      ;
; 0.071  ; operator[0]   ; mux_ula:seletor|y[2]      ; operator[0]   ; operator[0] ; -0.500       ; 3.102      ; 2.673      ;
; 0.086  ; operator[0]   ; mux_ula:seletor|y[1]      ; operator[0]   ; operator[0] ; -0.500       ; 3.102      ; 2.688      ;
; 0.114  ; operator[0]   ; mux_ula:seletor|y[0]      ; operator[0]   ; operator[0] ; -0.500       ; 3.099      ; 2.713      ;
; 0.481  ; inputdata1[0] ; mux_ula:seletor|ctrl[0]   ; inputdata1[0] ; operator[0] ; 0.000        ; 1.609      ; 2.090      ;
; 0.519  ; operator[0]   ; mux_ula:seletor|ctrl[0]   ; operator[0]   ; operator[0] ; -0.500       ; 1.609      ; 1.628      ;
; 0.527  ; operator[0]   ; mux_ula:seletor|saida_led ; operator[0]   ; operator[0] ; -0.500       ; 1.700      ; 1.727      ;
; 0.529  ; inputdata1[0] ; mux_ula:seletor|saida_led ; inputdata1[0] ; operator[0] ; 0.000        ; 1.700      ; 2.229      ;
; 0.981  ; inputdata1[0] ; mux_ula:seletor|ctrl[0]   ; inputdata1[0] ; operator[0] ; -0.500       ; 1.609      ; 2.090      ;
; 1.029  ; inputdata1[0] ; mux_ula:seletor|saida_led ; inputdata1[0] ; operator[0] ; -0.500       ; 1.700      ; 2.229      ;
+--------+---------------+---------------------------+---------------+-------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'key_0'                                                                                                      ;
+-------+------------------------+------------------------+--------------+-------------+--------------+------------+------------+
; Slack ; From Node              ; To Node                ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+-------+------------------------+------------------------+--------------+-------------+--------------+------------+------------+
; 0.215 ; button:button|keyonoff ; button:button|keyonoff ; key_0        ; key_0       ; 0.000        ; 0.000      ; 0.367      ;
+-------+------------------------+------------------------+--------------+-------------+--------------+------------+------------+


+------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'mux_ula:seletor|ctrl[0]'                                                                                                                 ;
+-------+----------------------+------------------------------------------+---------------+-------------------------+--------------+------------+------------+
; Slack ; From Node            ; To Node                                  ; Launch Clock  ; Latch Clock             ; Relationship ; Clock Skew ; Data Delay ;
+-------+----------------------+------------------------------------------+---------------+-------------------------+--------------+------------+------------+
; 1.567 ; mux_ula:seletor|y[0] ; convdisplay:conversor_display|display[3] ; operator[0]   ; mux_ula:seletor|ctrl[0] ; 0.000        ; -1.218     ; 0.349      ;
; 1.568 ; mux_ula:seletor|y[0] ; convdisplay:conversor_display|display[0] ; operator[0]   ; mux_ula:seletor|ctrl[0] ; 0.000        ; -1.219     ; 0.349      ;
; 1.618 ; mux_ula:seletor|y[3] ; convdisplay:conversor_display|display[3] ; operator[0]   ; mux_ula:seletor|ctrl[0] ; 0.000        ; -1.218     ; 0.400      ;
; 1.620 ; mux_ula:seletor|y[3] ; convdisplay:conversor_display|display[0] ; operator[0]   ; mux_ula:seletor|ctrl[0] ; 0.000        ; -1.219     ; 0.401      ;
; 1.686 ; mux_ula:seletor|y[2] ; convdisplay:conversor_display|display[3] ; operator[0]   ; mux_ula:seletor|ctrl[0] ; 0.000        ; -1.221     ; 0.465      ;
; 1.687 ; mux_ula:seletor|y[2] ; convdisplay:conversor_display|display[0] ; operator[0]   ; mux_ula:seletor|ctrl[0] ; 0.000        ; -1.222     ; 0.465      ;
; 1.704 ; mux_ula:seletor|y[1] ; convdisplay:conversor_display|display[3] ; operator[0]   ; mux_ula:seletor|ctrl[0] ; 0.000        ; -1.221     ; 0.483      ;
; 1.705 ; mux_ula:seletor|y[1] ; convdisplay:conversor_display|display[0] ; operator[0]   ; mux_ula:seletor|ctrl[0] ; 0.000        ; -1.222     ; 0.483      ;
; 2.387 ; mux_ula:seletor|y[0] ; convdisplay:conversor_display|display[3] ; inputdata1[0] ; mux_ula:seletor|ctrl[0] ; -0.500       ; -1.538     ; 0.349      ;
; 2.388 ; mux_ula:seletor|y[0] ; convdisplay:conversor_display|display[0] ; inputdata1[0] ; mux_ula:seletor|ctrl[0] ; -0.500       ; -1.539     ; 0.349      ;
; 2.438 ; mux_ula:seletor|y[3] ; convdisplay:conversor_display|display[3] ; inputdata1[0] ; mux_ula:seletor|ctrl[0] ; -0.500       ; -1.538     ; 0.400      ;
; 2.440 ; mux_ula:seletor|y[3] ; convdisplay:conversor_display|display[0] ; inputdata1[0] ; mux_ula:seletor|ctrl[0] ; -0.500       ; -1.539     ; 0.401      ;
; 2.506 ; mux_ula:seletor|y[2] ; convdisplay:conversor_display|display[3] ; inputdata1[0] ; mux_ula:seletor|ctrl[0] ; -0.500       ; -1.541     ; 0.465      ;
; 2.507 ; mux_ula:seletor|y[2] ; convdisplay:conversor_display|display[0] ; inputdata1[0] ; mux_ula:seletor|ctrl[0] ; -0.500       ; -1.542     ; 0.465      ;
; 2.524 ; mux_ula:seletor|y[1] ; convdisplay:conversor_display|display[3] ; inputdata1[0] ; mux_ula:seletor|ctrl[0] ; -0.500       ; -1.541     ; 0.483      ;
; 2.525 ; mux_ula:seletor|y[1] ; convdisplay:conversor_display|display[0] ; inputdata1[0] ; mux_ula:seletor|ctrl[0] ; -0.500       ; -1.542     ; 0.483      ;
+-------+----------------------+------------------------------------------+---------------+-------------------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Recovery: 'operator[0]'                                                                                                ;
+--------+------------------------+---------------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node              ; To Node                   ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+------------------------+---------------------------+--------------+-------------+--------------+------------+------------+
; -0.589 ; button:button|keyonoff ; mux_ula:seletor|ctrl[0]   ; key_0        ; operator[0] ; 0.500        ; -0.066     ; 0.545      ;
; 0.100  ; operator[0]            ; mux_ula:seletor|ctrl[0]   ; operator[0]  ; operator[0] ; 0.500        ; 1.609      ; 1.531      ;
; 0.101  ; button:button|keyonoff ; mux_ula:seletor|saida_led ; key_0        ; operator[0] ; 1.000        ; 0.025      ; 0.455      ;
; 0.600  ; operator[0]            ; mux_ula:seletor|ctrl[0]   ; operator[0]  ; operator[0] ; 1.000        ; 1.609      ; 1.531      ;
+--------+------------------------+---------------------------+--------------+-------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Recovery: 'mux_ula:seletor|ctrl[0]'                                                                                                                          ;
+-------+-------------------------+------------------------------------------+-------------------------+-------------------------+--------------+------------+------------+
; Slack ; From Node               ; To Node                                  ; Launch Clock            ; Latch Clock             ; Relationship ; Clock Skew ; Data Delay ;
+-------+-------------------------+------------------------------------------+-------------------------+-------------------------+--------------+------------+------------+
; 1.510 ; mux_ula:seletor|ctrl[0] ; convdisplay:conversor_display|display[0] ; mux_ula:seletor|ctrl[0] ; mux_ula:seletor|ctrl[0] ; 0.500        ; 1.880      ; 0.463      ;
; 1.511 ; mux_ula:seletor|ctrl[0] ; convdisplay:conversor_display|display[3] ; mux_ula:seletor|ctrl[0] ; mux_ula:seletor|ctrl[0] ; 0.500        ; 1.881      ; 0.463      ;
; 2.010 ; mux_ula:seletor|ctrl[0] ; convdisplay:conversor_display|display[0] ; mux_ula:seletor|ctrl[0] ; mux_ula:seletor|ctrl[0] ; 1.000        ; 1.880      ; 0.463      ;
; 2.011 ; mux_ula:seletor|ctrl[0] ; convdisplay:conversor_display|display[3] ; mux_ula:seletor|ctrl[0] ; mux_ula:seletor|ctrl[0] ; 1.000        ; 1.881      ; 0.463      ;
+-------+-------------------------+------------------------------------------+-------------------------+-------------------------+--------------+------------+------------+


+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Removal: 'mux_ula:seletor|ctrl[0]'                                                                                                                            ;
+--------+-------------------------+------------------------------------------+-------------------------+-------------------------+--------------+------------+------------+
; Slack  ; From Node               ; To Node                                  ; Launch Clock            ; Latch Clock             ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------------+------------------------------------------+-------------------------+-------------------------+--------------+------------+------------+
; -1.418 ; mux_ula:seletor|ctrl[0] ; convdisplay:conversor_display|display[3] ; mux_ula:seletor|ctrl[0] ; mux_ula:seletor|ctrl[0] ; 0.000        ; 1.881      ; 0.463      ;
; -1.417 ; mux_ula:seletor|ctrl[0] ; convdisplay:conversor_display|display[0] ; mux_ula:seletor|ctrl[0] ; mux_ula:seletor|ctrl[0] ; 0.000        ; 1.880      ; 0.463      ;
; -0.918 ; mux_ula:seletor|ctrl[0] ; convdisplay:conversor_display|display[3] ; mux_ula:seletor|ctrl[0] ; mux_ula:seletor|ctrl[0] ; -0.500       ; 1.881      ; 0.463      ;
; -0.917 ; mux_ula:seletor|ctrl[0] ; convdisplay:conversor_display|display[0] ; mux_ula:seletor|ctrl[0] ; mux_ula:seletor|ctrl[0] ; -0.500       ; 1.880      ; 0.463      ;
+--------+-------------------------+------------------------------------------+-------------------------+-------------------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Removal: 'operator[0]'                                                                                                 ;
+--------+------------------------+---------------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node              ; To Node                   ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+------------------------+---------------------------+--------------+-------------+--------------+------------+------------+
; -0.078 ; operator[0]            ; mux_ula:seletor|ctrl[0]   ; operator[0]  ; operator[0] ; 0.000        ; 1.609      ; 1.531      ;
; 0.422  ; operator[0]            ; mux_ula:seletor|ctrl[0]   ; operator[0]  ; operator[0] ; -0.500       ; 1.609      ; 1.531      ;
; 0.430  ; button:button|keyonoff ; mux_ula:seletor|saida_led ; key_0        ; operator[0] ; 0.000        ; 0.025      ; 0.455      ;
; 1.111  ; button:button|keyonoff ; mux_ula:seletor|ctrl[0]   ; key_0        ; operator[0] ; -0.500       ; -0.066     ; 0.545      ;
+--------+------------------------+---------------------------+--------------+-------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'inputdata1[0]'                                                                                           ;
+--------+--------------+----------------+------------------+---------------+------------+--------------------------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock         ; Clock Edge ; Target                                           ;
+--------+--------------+----------------+------------------+---------------+------------+--------------------------------------------------+
; -1.380 ; 1.000        ; 2.380          ; Port Rate        ; inputdata1[0] ; Rise       ; inputdata1[0]                                    ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; inputdata1[0] ; Rise       ; inputdata1[0]|combout                            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; inputdata1[0] ; Rise       ; inputdata1[0]|combout                            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; inputdata1[0] ; Fall       ; mux_ula:seletor|y[0]                             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; inputdata1[0] ; Fall       ; mux_ula:seletor|y[0]                             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; inputdata1[0] ; Fall       ; mux_ula:seletor|y[1]                             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; inputdata1[0] ; Fall       ; mux_ula:seletor|y[1]                             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; inputdata1[0] ; Fall       ; mux_ula:seletor|y[2]                             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; inputdata1[0] ; Fall       ; mux_ula:seletor|y[2]                             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; inputdata1[0] ; Fall       ; mux_ula:seletor|y[3]                             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; inputdata1[0] ; Fall       ; mux_ula:seletor|y[3]                             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; inputdata1[0] ; Rise       ; seletor|y[0]|datad                               ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; inputdata1[0] ; Rise       ; seletor|y[0]|datad                               ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; inputdata1[0] ; Rise       ; seletor|y[1]|datad                               ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; inputdata1[0] ; Rise       ; seletor|y[1]|datad                               ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; inputdata1[0] ; Rise       ; seletor|y[2]|datad                               ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; inputdata1[0] ; Rise       ; seletor|y[2]|datad                               ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; inputdata1[0] ; Rise       ; seletor|y[3]|datad                               ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; inputdata1[0] ; Rise       ; seletor|y[3]|datad                               ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; inputdata1[0] ; Rise       ; seletor|y[3]~6clkctrl|inclk[0]                   ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; inputdata1[0] ; Rise       ; seletor|y[3]~6clkctrl|inclk[0]                   ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; inputdata1[0] ; Rise       ; seletor|y[3]~6clkctrl|outclk                     ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; inputdata1[0] ; Rise       ; seletor|y[3]~6clkctrl|outclk                     ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; inputdata1[0] ; Rise       ; seletor|y[3]~6|combout                           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; inputdata1[0] ; Rise       ; seletor|y[3]~6|combout                           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; inputdata1[0] ; Fall       ; seletor|y[3]~6|datad                             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; inputdata1[0] ; Fall       ; seletor|y[3]~6|datad                             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; inputdata1[0] ; Fall       ; subtracao|comparador_menor_q|resultmeq~1|combout ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; inputdata1[0] ; Fall       ; subtracao|comparador_menor_q|resultmeq~1|combout ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; inputdata1[0] ; Rise       ; subtracao|comparador_menor_q|resultmeq~1|datad   ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; inputdata1[0] ; Rise       ; subtracao|comparador_menor_q|resultmeq~1|datad   ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; inputdata1[0] ; Fall       ; subtracao|comparador_menor_q|resultmeq~3|combout ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; inputdata1[0] ; Fall       ; subtracao|comparador_menor_q|resultmeq~3|combout ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; inputdata1[0] ; Fall       ; subtracao|comparador_menor_q|resultmeq~3|datad   ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; inputdata1[0] ; Fall       ; subtracao|comparador_menor_q|resultmeq~3|datad   ;
+--------+--------------+----------------+------------------+---------------+------------+--------------------------------------------------+


+-----------------------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'operator[0]'                                                                         ;
+--------+--------------+----------------+------------------+-------------+------------+--------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock       ; Clock Edge ; Target                         ;
+--------+--------------+----------------+------------------+-------------+------------+--------------------------------+
; -1.380 ; 1.000        ; 2.380          ; Port Rate        ; operator[0] ; Rise       ; operator[0]                    ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; operator[0] ; Fall       ; mux_ula:seletor|ctrl[0]        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; operator[0] ; Fall       ; mux_ula:seletor|ctrl[0]        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; operator[0] ; Rise       ; mux_ula:seletor|saida_led      ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; operator[0] ; Rise       ; mux_ula:seletor|saida_led      ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; operator[0] ; Rise       ; mux_ula:seletor|y[0]           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; operator[0] ; Rise       ; mux_ula:seletor|y[0]           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; operator[0] ; Rise       ; mux_ula:seletor|y[1]           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; operator[0] ; Rise       ; mux_ula:seletor|y[1]           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; operator[0] ; Rise       ; mux_ula:seletor|y[2]           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; operator[0] ; Rise       ; mux_ula:seletor|y[2]           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; operator[0] ; Rise       ; mux_ula:seletor|y[3]           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; operator[0] ; Rise       ; mux_ula:seletor|y[3]           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; operator[0] ; Rise       ; operator[0]|combout            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; operator[0] ; Rise       ; operator[0]|combout            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; operator[0] ; Rise       ; seletor|ctrl[0]|dataa          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; operator[0] ; Rise       ; seletor|ctrl[0]|dataa          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; operator[0] ; Fall       ; seletor|saida_led|datab        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; operator[0] ; Fall       ; seletor|saida_led|datab        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; operator[0] ; Fall       ; seletor|saida_led~10|combout   ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; operator[0] ; Fall       ; seletor|saida_led~10|combout   ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; operator[0] ; Rise       ; seletor|saida_led~10|datad     ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; operator[0] ; Rise       ; seletor|saida_led~10|datad     ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; operator[0] ; Rise       ; seletor|saida_led~11|combout   ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; operator[0] ; Rise       ; seletor|saida_led~11|combout   ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; operator[0] ; Rise       ; seletor|saida_led~11|datad     ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; operator[0] ; Rise       ; seletor|saida_led~11|datad     ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; operator[0] ; Fall       ; seletor|y[0]|datad             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; operator[0] ; Fall       ; seletor|y[0]|datad             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; operator[0] ; Fall       ; seletor|y[1]|datad             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; operator[0] ; Fall       ; seletor|y[1]|datad             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; operator[0] ; Fall       ; seletor|y[2]|datad             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; operator[0] ; Fall       ; seletor|y[2]|datad             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; operator[0] ; Fall       ; seletor|y[3]|datad             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; operator[0] ; Fall       ; seletor|y[3]|datad             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; operator[0] ; Fall       ; seletor|y[3]~6clkctrl|inclk[0] ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; operator[0] ; Fall       ; seletor|y[3]~6clkctrl|inclk[0] ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; operator[0] ; Fall       ; seletor|y[3]~6clkctrl|outclk   ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; operator[0] ; Fall       ; seletor|y[3]~6clkctrl|outclk   ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; operator[0] ; Fall       ; seletor|y[3]~6|combout         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; operator[0] ; Fall       ; seletor|y[3]~6|combout         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; operator[0] ; Rise       ; seletor|y[3]~6|datab           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; operator[0] ; Rise       ; seletor|y[3]~6|datab           ;
+--------+--------------+----------------+------------------+-------------+------------+--------------------------------+


+---------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'key_0'                                                                 ;
+--------+--------------+----------------+------------------+-------+------------+------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock ; Clock Edge ; Target                 ;
+--------+--------------+----------------+------------------+-------+------------+------------------------+
; -1.222 ; 1.000        ; 2.222          ; Port Rate        ; key_0 ; Rise       ; key_0                  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; key_0 ; Rise       ; button:button|keyonoff ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; key_0 ; Rise       ; button:button|keyonoff ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; key_0 ; Rise       ; button|keyonoff|clk    ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; key_0 ; Rise       ; button|keyonoff|clk    ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; key_0 ; Rise       ; key_0|combout          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; key_0 ; Rise       ; key_0|combout          ;
+--------+--------------+----------------+------------------+-------+------------+------------------------+


+----------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'mux_ula:seletor|ctrl[0]'                                                                                    ;
+-------+--------------+----------------+------------------+-------------------------+------------+--------------------------------------------+
; Slack ; Actual Width ; Required Width ; Type             ; Clock                   ; Clock Edge ; Target                                     ;
+-------+--------------+----------------+------------------+-------------------------+------------+--------------------------------------------+
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; mux_ula:seletor|ctrl[0] ; Rise       ; convdisplay:conversor_display|display[0]   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; mux_ula:seletor|ctrl[0] ; Rise       ; convdisplay:conversor_display|display[0]   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; mux_ula:seletor|ctrl[0] ; Rise       ; convdisplay:conversor_display|display[3]   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; mux_ula:seletor|ctrl[0] ; Rise       ; convdisplay:conversor_display|display[3]   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; mux_ula:seletor|ctrl[0] ; Rise       ; conversor_display|Equal0~0clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; mux_ula:seletor|ctrl[0] ; Rise       ; conversor_display|Equal0~0clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; mux_ula:seletor|ctrl[0] ; Rise       ; conversor_display|Equal0~0clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; mux_ula:seletor|ctrl[0] ; Rise       ; conversor_display|Equal0~0clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; mux_ula:seletor|ctrl[0] ; Rise       ; conversor_display|Equal0~0|combout         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; mux_ula:seletor|ctrl[0] ; Rise       ; conversor_display|Equal0~0|combout         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; mux_ula:seletor|ctrl[0] ; Rise       ; conversor_display|Equal0~0|datad           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; mux_ula:seletor|ctrl[0] ; Rise       ; conversor_display|Equal0~0|datad           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; mux_ula:seletor|ctrl[0] ; Rise       ; conversor_display|display[0]|datac         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; mux_ula:seletor|ctrl[0] ; Rise       ; conversor_display|display[0]|datac         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; mux_ula:seletor|ctrl[0] ; Rise       ; conversor_display|display[3]|datac         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; mux_ula:seletor|ctrl[0] ; Rise       ; conversor_display|display[3]|datac         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; mux_ula:seletor|ctrl[0] ; Rise       ; seletor|ctrl[0]|combout                    ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; mux_ula:seletor|ctrl[0] ; Rise       ; seletor|ctrl[0]|combout                    ;
+-------+--------------+----------------+------------------+-------------------------+------------+--------------------------------------------+


+---------------------------------------------------------------------------------+
; Setup Times                                                                     ;
+----------------+---------------+--------+--------+------------+-----------------+
; Data Port      ; Clock Port    ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+----------------+---------------+--------+--------+------------+-----------------+
; inputdata1[*]  ; inputdata1[0] ; 0.386  ; 0.386  ; Fall       ; inputdata1[0]   ;
;  inputdata1[0] ; inputdata1[0] ; -0.174 ; -0.174 ; Fall       ; inputdata1[0]   ;
;  inputdata1[1] ; inputdata1[0] ; -0.169 ; -0.169 ; Fall       ; inputdata1[0]   ;
;  inputdata1[2] ; inputdata1[0] ; 0.386  ; 0.386  ; Fall       ; inputdata1[0]   ;
;  inputdata1[3] ; inputdata1[0] ; 0.362  ; 0.362  ; Fall       ; inputdata1[0]   ;
; inputdata2[*]  ; inputdata1[0] ; 3.214  ; 3.214  ; Fall       ; inputdata1[0]   ;
;  inputdata2[0] ; inputdata1[0] ; 3.202  ; 3.202  ; Fall       ; inputdata1[0]   ;
;  inputdata2[1] ; inputdata1[0] ; 2.791  ; 2.791  ; Fall       ; inputdata1[0]   ;
;  inputdata2[2] ; inputdata1[0] ; 3.083  ; 3.083  ; Fall       ; inputdata1[0]   ;
;  inputdata2[3] ; inputdata1[0] ; 3.214  ; 3.214  ; Fall       ; inputdata1[0]   ;
; operator[*]    ; inputdata1[0] ; 0.349  ; 0.349  ; Fall       ; inputdata1[0]   ;
;  operator[0]   ; inputdata1[0] ; -0.245 ; -0.245 ; Fall       ; inputdata1[0]   ;
;  operator[1]   ; inputdata1[0] ; 0.015  ; 0.015  ; Fall       ; inputdata1[0]   ;
;  operator[2]   ; inputdata1[0] ; 0.349  ; 0.349  ; Fall       ; inputdata1[0]   ;
; inputdata1[*]  ; operator[0]   ; 1.667  ; 1.667  ; Rise       ; operator[0]     ;
;  inputdata1[0] ; operator[0]   ; 1.100  ; 1.100  ; Rise       ; operator[0]     ;
;  inputdata1[1] ; operator[0]   ; 1.206  ; 1.206  ; Rise       ; operator[0]     ;
;  inputdata1[2] ; operator[0]   ; 1.667  ; 1.667  ; Rise       ; operator[0]     ;
;  inputdata1[3] ; operator[0]   ; 1.643  ; 1.643  ; Rise       ; operator[0]     ;
; inputdata2[*]  ; operator[0]   ; 4.495  ; 4.495  ; Rise       ; operator[0]     ;
;  inputdata2[0] ; operator[0]   ; 4.483  ; 4.483  ; Rise       ; operator[0]     ;
;  inputdata2[1] ; operator[0]   ; 4.072  ; 4.072  ; Rise       ; operator[0]     ;
;  inputdata2[2] ; operator[0]   ; 4.364  ; 4.364  ; Rise       ; operator[0]     ;
;  inputdata2[3] ; operator[0]   ; 4.495  ; 4.495  ; Rise       ; operator[0]     ;
; operator[*]    ; operator[0]   ; 1.850  ; 1.850  ; Rise       ; operator[0]     ;
;  operator[0]   ; operator[0]   ; 0.637  ; 0.637  ; Rise       ; operator[0]     ;
;  operator[1]   ; operator[0]   ; 1.850  ; 1.850  ; Rise       ; operator[0]     ;
;  operator[2]   ; operator[0]   ; 1.751  ; 1.751  ; Rise       ; operator[0]     ;
; inputdata1[*]  ; operator[0]   ; 1.544  ; 1.544  ; Fall       ; operator[0]     ;
;  inputdata1[0] ; operator[0]   ; 0.959  ; 0.959  ; Fall       ; operator[0]     ;
;  inputdata1[1] ; operator[0]   ; 0.989  ; 0.989  ; Fall       ; operator[0]     ;
;  inputdata1[2] ; operator[0]   ; 1.544  ; 1.544  ; Fall       ; operator[0]     ;
;  inputdata1[3] ; operator[0]   ; 1.520  ; 1.520  ; Fall       ; operator[0]     ;
; inputdata2[*]  ; operator[0]   ; 4.372  ; 4.372  ; Fall       ; operator[0]     ;
;  inputdata2[0] ; operator[0]   ; 4.360  ; 4.360  ; Fall       ; operator[0]     ;
;  inputdata2[1] ; operator[0]   ; 3.949  ; 3.949  ; Fall       ; operator[0]     ;
;  inputdata2[2] ; operator[0]   ; 4.241  ; 4.241  ; Fall       ; operator[0]     ;
;  inputdata2[3] ; operator[0]   ; 4.372  ; 4.372  ; Fall       ; operator[0]     ;
; operator[*]    ; operator[0]   ; 1.115  ; 1.115  ; Fall       ; operator[0]     ;
;  operator[0]   ; operator[0]   ; 0.497  ; 0.497  ; Fall       ; operator[0]     ;
;  operator[1]   ; operator[0]   ; 0.713  ; 0.713  ; Fall       ; operator[0]     ;
;  operator[2]   ; operator[0]   ; 1.115  ; 1.115  ; Fall       ; operator[0]     ;
+----------------+---------------+--------+--------+------------+-----------------+


+---------------------------------------------------------------------------------+
; Hold Times                                                                      ;
+----------------+---------------+--------+--------+------------+-----------------+
; Data Port      ; Clock Port    ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+----------------+---------------+--------+--------+------------+-----------------+
; inputdata1[*]  ; inputdata1[0] ; 1.820  ; 1.820  ; Fall       ; inputdata1[0]   ;
;  inputdata1[0] ; inputdata1[0] ; 0.797  ; 0.797  ; Fall       ; inputdata1[0]   ;
;  inputdata1[1] ; inputdata1[0] ; 1.627  ; 1.627  ; Fall       ; inputdata1[0]   ;
;  inputdata1[2] ; inputdata1[0] ; 1.820  ; 1.820  ; Fall       ; inputdata1[0]   ;
;  inputdata1[3] ; inputdata1[0] ; 1.324  ; 1.324  ; Fall       ; inputdata1[0]   ;
; inputdata2[*]  ; inputdata1[0] ; -1.262 ; -1.262 ; Fall       ; inputdata1[0]   ;
;  inputdata2[0] ; inputdata1[0] ; -1.262 ; -1.262 ; Fall       ; inputdata1[0]   ;
;  inputdata2[1] ; inputdata1[0] ; -1.672 ; -1.672 ; Fall       ; inputdata1[0]   ;
;  inputdata2[2] ; inputdata1[0] ; -1.562 ; -1.562 ; Fall       ; inputdata1[0]   ;
;  inputdata2[3] ; inputdata1[0] ; -1.809 ; -1.809 ; Fall       ; inputdata1[0]   ;
; operator[*]    ; inputdata1[0] ; 1.222  ; 1.222  ; Fall       ; inputdata1[0]   ;
;  operator[0]   ; inputdata1[0] ; 0.784  ; 0.784  ; Fall       ; inputdata1[0]   ;
;  operator[1]   ; inputdata1[0] ; 1.058  ; 1.058  ; Fall       ; inputdata1[0]   ;
;  operator[2]   ; inputdata1[0] ; 1.222  ; 1.222  ; Fall       ; inputdata1[0]   ;
; inputdata1[*]  ; operator[0]   ; 1.500  ; 1.500  ; Rise       ; operator[0]     ;
;  inputdata1[0] ; operator[0]   ; 0.477  ; 0.477  ; Rise       ; operator[0]     ;
;  inputdata1[1] ; operator[0]   ; 1.307  ; 1.307  ; Rise       ; operator[0]     ;
;  inputdata1[2] ; operator[0]   ; 1.500  ; 1.500  ; Rise       ; operator[0]     ;
;  inputdata1[3] ; operator[0]   ; 1.004  ; 1.004  ; Rise       ; operator[0]     ;
; inputdata2[*]  ; operator[0]   ; -1.582 ; -1.582 ; Rise       ; operator[0]     ;
;  inputdata2[0] ; operator[0]   ; -1.582 ; -1.582 ; Rise       ; operator[0]     ;
;  inputdata2[1] ; operator[0]   ; -1.992 ; -1.992 ; Rise       ; operator[0]     ;
;  inputdata2[2] ; operator[0]   ; -1.882 ; -1.882 ; Rise       ; operator[0]     ;
;  inputdata2[3] ; operator[0]   ; -2.129 ; -2.129 ; Rise       ; operator[0]     ;
; operator[*]    ; operator[0]   ; 0.902  ; 0.902  ; Rise       ; operator[0]     ;
;  operator[0]   ; operator[0]   ; 0.464  ; 0.464  ; Rise       ; operator[0]     ;
;  operator[1]   ; operator[0]   ; 0.738  ; 0.738  ; Rise       ; operator[0]     ;
;  operator[2]   ; operator[0]   ; 0.902  ; 0.902  ; Rise       ; operator[0]     ;
; inputdata1[*]  ; operator[0]   ; -0.481 ; -0.481 ; Fall       ; operator[0]     ;
;  inputdata1[0] ; operator[0]   ; -0.481 ; -0.481 ; Fall       ; operator[0]     ;
;  inputdata1[1] ; operator[0]   ; -0.511 ; -0.511 ; Fall       ; operator[0]     ;
;  inputdata1[2] ; operator[0]   ; -0.765 ; -0.765 ; Fall       ; operator[0]     ;
;  inputdata1[3] ; operator[0]   ; -0.737 ; -0.737 ; Fall       ; operator[0]     ;
; inputdata2[*]  ; operator[0]   ; -3.459 ; -3.459 ; Fall       ; operator[0]     ;
;  inputdata2[0] ; operator[0]   ; -3.882 ; -3.882 ; Fall       ; operator[0]     ;
;  inputdata2[1] ; operator[0]   ; -3.471 ; -3.471 ; Fall       ; operator[0]     ;
;  inputdata2[2] ; operator[0]   ; -3.459 ; -3.459 ; Fall       ; operator[0]     ;
;  inputdata2[3] ; operator[0]   ; -3.592 ; -3.592 ; Fall       ; operator[0]     ;
; operator[*]    ; operator[0]   ; -0.019 ; -0.019 ; Fall       ; operator[0]     ;
;  operator[0]   ; operator[0]   ; -0.019 ; -0.019 ; Fall       ; operator[0]     ;
;  operator[1]   ; operator[0]   ; -0.235 ; -0.235 ; Fall       ; operator[0]     ;
;  operator[2]   ; operator[0]   ; -0.637 ; -0.637 ; Fall       ; operator[0]     ;
+----------------+---------------+--------+--------+------------+-----------------+


+----------------------------------------------------------------------------------------------+
; Clock to Output Times                                                                        ;
+-------------+-------------------------+-------+-------+------------+-------------------------+
; Data Port   ; Clock Port              ; Rise  ; Fall  ; Clock Edge ; Clock Reference         ;
+-------------+-------------------------+-------+-------+------------+-------------------------+
; display[*]  ; inputdata1[0]           ; 7.205 ; 7.205 ; Fall       ; inputdata1[0]           ;
;  display[1] ; inputdata1[0]           ; 7.165 ; 7.165 ; Fall       ; inputdata1[0]           ;
;  display[2] ; inputdata1[0]           ; 7.175 ; 7.175 ; Fall       ; inputdata1[0]           ;
;  display[4] ; inputdata1[0]           ; 7.205 ; 7.205 ; Fall       ; inputdata1[0]           ;
;  display[5] ; inputdata1[0]           ; 6.988 ; 6.988 ; Fall       ; inputdata1[0]           ;
;  display[6] ; inputdata1[0]           ; 7.010 ; 7.010 ; Fall       ; inputdata1[0]           ;
; display[*]  ; mux_ula:seletor|ctrl[0] ; 4.769 ; 4.769 ; Rise       ; mux_ula:seletor|ctrl[0] ;
;  display[0] ; mux_ula:seletor|ctrl[0] ; 4.621 ; 4.621 ; Rise       ; mux_ula:seletor|ctrl[0] ;
;  display[1] ; mux_ula:seletor|ctrl[0] ; 4.738 ; 4.738 ; Rise       ; mux_ula:seletor|ctrl[0] ;
;  display[2] ; mux_ula:seletor|ctrl[0] ; 4.752 ; 4.752 ; Rise       ; mux_ula:seletor|ctrl[0] ;
;  display[3] ; mux_ula:seletor|ctrl[0] ; 4.558 ; 4.558 ; Rise       ; mux_ula:seletor|ctrl[0] ;
;  display[4] ; mux_ula:seletor|ctrl[0] ; 4.769 ; 4.769 ; Rise       ; mux_ula:seletor|ctrl[0] ;
;  display[5] ; mux_ula:seletor|ctrl[0] ; 4.554 ; 4.554 ; Rise       ; mux_ula:seletor|ctrl[0] ;
;  display[6] ; mux_ula:seletor|ctrl[0] ; 4.586 ; 4.586 ; Rise       ; mux_ula:seletor|ctrl[0] ;
; display[*]  ; mux_ula:seletor|ctrl[0] ; 4.769 ; 4.769 ; Fall       ; mux_ula:seletor|ctrl[0] ;
;  display[1] ; mux_ula:seletor|ctrl[0] ; 4.738 ; 4.738 ; Fall       ; mux_ula:seletor|ctrl[0] ;
;  display[2] ; mux_ula:seletor|ctrl[0] ; 4.752 ; 4.752 ; Fall       ; mux_ula:seletor|ctrl[0] ;
;  display[4] ; mux_ula:seletor|ctrl[0] ; 4.769 ; 4.769 ; Fall       ; mux_ula:seletor|ctrl[0] ;
;  display[5] ; mux_ula:seletor|ctrl[0] ; 4.554 ; 4.554 ; Fall       ; mux_ula:seletor|ctrl[0] ;
;  display[6] ; mux_ula:seletor|ctrl[0] ; 4.586 ; 4.586 ; Fall       ; mux_ula:seletor|ctrl[0] ;
; display[*]  ; operator[0]             ; 6.885 ; 6.885 ; Rise       ; operator[0]             ;
;  display[1] ; operator[0]             ; 6.845 ; 6.845 ; Rise       ; operator[0]             ;
;  display[2] ; operator[0]             ; 6.855 ; 6.855 ; Rise       ; operator[0]             ;
;  display[4] ; operator[0]             ; 6.885 ; 6.885 ; Rise       ; operator[0]             ;
;  display[5] ; operator[0]             ; 6.668 ; 6.668 ; Rise       ; operator[0]             ;
;  display[6] ; operator[0]             ; 6.690 ; 6.690 ; Rise       ; operator[0]             ;
; led         ; operator[0]             ; 4.985 ; 4.985 ; Rise       ; operator[0]             ;
+-------------+-------------------------+-------+-------+------------+-------------------------+


+----------------------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                                ;
+-------------+-------------------------+-------+-------+------------+-------------------------+
; Data Port   ; Clock Port              ; Rise  ; Fall  ; Clock Edge ; Clock Reference         ;
+-------------+-------------------------+-------+-------+------------+-------------------------+
; display[*]  ; inputdata1[0]           ; 6.882 ; 6.882 ; Fall       ; inputdata1[0]           ;
;  display[1] ; inputdata1[0]           ; 7.061 ; 7.061 ; Fall       ; inputdata1[0]           ;
;  display[2] ; inputdata1[0]           ; 7.072 ; 7.072 ; Fall       ; inputdata1[0]           ;
;  display[4] ; inputdata1[0]           ; 7.102 ; 7.102 ; Fall       ; inputdata1[0]           ;
;  display[5] ; inputdata1[0]           ; 6.882 ; 6.882 ; Fall       ; inputdata1[0]           ;
;  display[6] ; inputdata1[0]           ; 6.909 ; 6.909 ; Fall       ; inputdata1[0]           ;
; display[*]  ; mux_ula:seletor|ctrl[0] ; 4.554 ; 3.081 ; Rise       ; mux_ula:seletor|ctrl[0] ;
;  display[0] ; mux_ula:seletor|ctrl[0] ; 4.621 ; 4.621 ; Rise       ; mux_ula:seletor|ctrl[0] ;
;  display[1] ; mux_ula:seletor|ctrl[0] ; 4.738 ; 3.199 ; Rise       ; mux_ula:seletor|ctrl[0] ;
;  display[2] ; mux_ula:seletor|ctrl[0] ; 4.752 ; 3.195 ; Rise       ; mux_ula:seletor|ctrl[0] ;
;  display[3] ; mux_ula:seletor|ctrl[0] ; 4.558 ; 4.558 ; Rise       ; mux_ula:seletor|ctrl[0] ;
;  display[4] ; mux_ula:seletor|ctrl[0] ; 4.769 ; 3.299 ; Rise       ; mux_ula:seletor|ctrl[0] ;
;  display[5] ; mux_ula:seletor|ctrl[0] ; 4.554 ; 3.081 ; Rise       ; mux_ula:seletor|ctrl[0] ;
;  display[6] ; mux_ula:seletor|ctrl[0] ; 4.586 ; 3.112 ; Rise       ; mux_ula:seletor|ctrl[0] ;
; display[*]  ; mux_ula:seletor|ctrl[0] ; 3.081 ; 4.554 ; Fall       ; mux_ula:seletor|ctrl[0] ;
;  display[1] ; mux_ula:seletor|ctrl[0] ; 3.199 ; 4.738 ; Fall       ; mux_ula:seletor|ctrl[0] ;
;  display[2] ; mux_ula:seletor|ctrl[0] ; 3.195 ; 4.752 ; Fall       ; mux_ula:seletor|ctrl[0] ;
;  display[4] ; mux_ula:seletor|ctrl[0] ; 3.299 ; 4.769 ; Fall       ; mux_ula:seletor|ctrl[0] ;
;  display[5] ; mux_ula:seletor|ctrl[0] ; 3.081 ; 4.554 ; Fall       ; mux_ula:seletor|ctrl[0] ;
;  display[6] ; mux_ula:seletor|ctrl[0] ; 3.112 ; 4.586 ; Fall       ; mux_ula:seletor|ctrl[0] ;
; display[*]  ; operator[0]             ; 6.562 ; 6.562 ; Rise       ; operator[0]             ;
;  display[1] ; operator[0]             ; 6.741 ; 6.741 ; Rise       ; operator[0]             ;
;  display[2] ; operator[0]             ; 6.752 ; 6.752 ; Rise       ; operator[0]             ;
;  display[4] ; operator[0]             ; 6.782 ; 6.782 ; Rise       ; operator[0]             ;
;  display[5] ; operator[0]             ; 6.562 ; 6.562 ; Rise       ; operator[0]             ;
;  display[6] ; operator[0]             ; 6.589 ; 6.589 ; Rise       ; operator[0]             ;
; led         ; operator[0]             ; 4.985 ; 4.985 ; Rise       ; operator[0]             ;
+-------------+-------------------------+-------+-------+------------+-------------------------+


+----------------------------------------------------------------------------------------+
; Multicorner Timing Analysis Summary                                                    ;
+--------------------------+---------+--------+----------+---------+---------------------+
; Clock                    ; Setup   ; Hold   ; Recovery ; Removal ; Minimum Pulse Width ;
+--------------------------+---------+--------+----------+---------+---------------------+
; Worst-case Slack         ; -4.736  ; -1.052 ; -1.696   ; -2.373  ; -1.380              ;
;  inputdata1[0]           ; 0.011   ; -1.052 ; N/A      ; N/A     ; -1.380              ;
;  key_0                   ; 0.379   ; 0.215  ; N/A      ; N/A     ; -1.222              ;
;  mux_ula:seletor|ctrl[0] ; -4.736  ; 1.567  ; 1.510    ; -2.373  ; 0.500               ;
;  operator[0]             ; -2.222  ; -0.477 ; -1.696   ; -0.135  ; -1.380              ;
; Design-wide TNS          ; -15.031 ; -4.9   ; -2.475   ; -4.881  ; -4.982              ;
;  inputdata1[0]           ; 0.000   ; -3.890 ; N/A      ; N/A     ; -1.380              ;
;  key_0                   ; 0.000   ; 0.000  ; N/A      ; N/A     ; -2.222              ;
;  mux_ula:seletor|ctrl[0] ; -9.449  ; 0.000  ; 0.000    ; -4.746  ; 0.000               ;
;  operator[0]             ; -5.582  ; -1.810 ; -2.475   ; -0.135  ; -1.380              ;
+--------------------------+---------+--------+----------+---------+---------------------+


+-------------------------------------------------------------------------------+
; Setup Times                                                                   ;
+----------------+---------------+-------+-------+------------+-----------------+
; Data Port      ; Clock Port    ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+----------------+---------------+-------+-------+------------+-----------------+
; inputdata1[*]  ; inputdata1[0] ; 1.784 ; 1.784 ; Fall       ; inputdata1[0]   ;
;  inputdata1[0] ; inputdata1[0] ; 0.489 ; 0.489 ; Fall       ; inputdata1[0]   ;
;  inputdata1[1] ; inputdata1[0] ; 0.579 ; 0.579 ; Fall       ; inputdata1[0]   ;
;  inputdata1[2] ; inputdata1[0] ; 1.784 ; 1.784 ; Fall       ; inputdata1[0]   ;
;  inputdata1[3] ; inputdata1[0] ; 1.646 ; 1.646 ; Fall       ; inputdata1[0]   ;
; inputdata2[*]  ; inputdata1[0] ; 6.493 ; 6.493 ; Fall       ; inputdata1[0]   ;
;  inputdata2[0] ; inputdata1[0] ; 6.493 ; 6.493 ; Fall       ; inputdata1[0]   ;
;  inputdata2[1] ; inputdata1[0] ; 5.624 ; 5.624 ; Fall       ; inputdata1[0]   ;
;  inputdata2[2] ; inputdata1[0] ; 6.128 ; 6.128 ; Fall       ; inputdata1[0]   ;
;  inputdata2[3] ; inputdata1[0] ; 6.458 ; 6.458 ; Fall       ; inputdata1[0]   ;
; operator[*]    ; inputdata1[0] ; 1.485 ; 1.485 ; Fall       ; inputdata1[0]   ;
;  operator[0]   ; inputdata1[0] ; 0.259 ; 0.259 ; Fall       ; inputdata1[0]   ;
;  operator[1]   ; inputdata1[0] ; 0.687 ; 0.687 ; Fall       ; inputdata1[0]   ;
;  operator[2]   ; inputdata1[0] ; 1.485 ; 1.485 ; Fall       ; inputdata1[0]   ;
; inputdata1[*]  ; operator[0]   ; 3.938 ; 3.938 ; Rise       ; operator[0]     ;
;  inputdata1[0] ; operator[0]   ; 2.722 ; 2.722 ; Rise       ; operator[0]     ;
;  inputdata1[1] ; operator[0]   ; 2.954 ; 2.954 ; Rise       ; operator[0]     ;
;  inputdata1[2] ; operator[0]   ; 3.938 ; 3.938 ; Rise       ; operator[0]     ;
;  inputdata1[3] ; operator[0]   ; 3.800 ; 3.800 ; Rise       ; operator[0]     ;
; inputdata2[*]  ; operator[0]   ; 8.647 ; 8.647 ; Rise       ; operator[0]     ;
;  inputdata2[0] ; operator[0]   ; 8.647 ; 8.647 ; Rise       ; operator[0]     ;
;  inputdata2[1] ; operator[0]   ; 7.778 ; 7.778 ; Rise       ; operator[0]     ;
;  inputdata2[2] ; operator[0]   ; 8.282 ; 8.282 ; Rise       ; operator[0]     ;
;  inputdata2[3] ; operator[0]   ; 8.612 ; 8.612 ; Rise       ; operator[0]     ;
; operator[*]    ; operator[0]   ; 4.040 ; 4.040 ; Rise       ; operator[0]     ;
;  operator[0]   ; operator[0]   ; 1.595 ; 1.595 ; Rise       ; operator[0]     ;
;  operator[1]   ; operator[0]   ; 4.040 ; 4.040 ; Rise       ; operator[0]     ;
;  operator[2]   ; operator[0]   ; 3.935 ; 3.935 ; Rise       ; operator[0]     ;
; inputdata1[*]  ; operator[0]   ; 3.569 ; 3.569 ; Fall       ; operator[0]     ;
;  inputdata1[0] ; operator[0]   ; 2.274 ; 2.274 ; Fall       ; operator[0]     ;
;  inputdata1[1] ; operator[0]   ; 2.364 ; 2.364 ; Fall       ; operator[0]     ;
;  inputdata1[2] ; operator[0]   ; 3.569 ; 3.569 ; Fall       ; operator[0]     ;
;  inputdata1[3] ; operator[0]   ; 3.431 ; 3.431 ; Fall       ; operator[0]     ;
; inputdata2[*]  ; operator[0]   ; 8.278 ; 8.278 ; Fall       ; operator[0]     ;
;  inputdata2[0] ; operator[0]   ; 8.278 ; 8.278 ; Fall       ; operator[0]     ;
;  inputdata2[1] ; operator[0]   ; 7.409 ; 7.409 ; Fall       ; operator[0]     ;
;  inputdata2[2] ; operator[0]   ; 7.913 ; 7.913 ; Fall       ; operator[0]     ;
;  inputdata2[3] ; operator[0]   ; 8.243 ; 8.243 ; Fall       ; operator[0]     ;
; operator[*]    ; operator[0]   ; 2.424 ; 2.424 ; Fall       ; operator[0]     ;
;  operator[0]   ; operator[0]   ; 1.175 ; 1.175 ; Fall       ; operator[0]     ;
;  operator[1]   ; operator[0]   ; 1.533 ; 1.533 ; Fall       ; operator[0]     ;
;  operator[2]   ; operator[0]   ; 2.424 ; 2.424 ; Fall       ; operator[0]     ;
+----------------+---------------+-------+-------+------------+-----------------+


+---------------------------------------------------------------------------------+
; Hold Times                                                                      ;
+----------------+---------------+--------+--------+------------+-----------------+
; Data Port      ; Clock Port    ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+----------------+---------------+--------+--------+------------+-----------------+
; inputdata1[*]  ; inputdata1[0] ; 3.353  ; 3.353  ; Fall       ; inputdata1[0]   ;
;  inputdata1[0] ; inputdata1[0] ; 1.052  ; 1.052  ; Fall       ; inputdata1[0]   ;
;  inputdata1[1] ; inputdata1[0] ; 2.886  ; 2.886  ; Fall       ; inputdata1[0]   ;
;  inputdata1[2] ; inputdata1[0] ; 3.353  ; 3.353  ; Fall       ; inputdata1[0]   ;
;  inputdata1[3] ; inputdata1[0] ; 2.234  ; 2.234  ; Fall       ; inputdata1[0]   ;
; inputdata2[*]  ; inputdata1[0] ; -1.262 ; -1.262 ; Fall       ; inputdata1[0]   ;
;  inputdata2[0] ; inputdata1[0] ; -1.262 ; -1.262 ; Fall       ; inputdata1[0]   ;
;  inputdata2[1] ; inputdata1[0] ; -1.672 ; -1.672 ; Fall       ; inputdata1[0]   ;
;  inputdata2[2] ; inputdata1[0] ; -1.562 ; -1.562 ; Fall       ; inputdata1[0]   ;
;  inputdata2[3] ; inputdata1[0] ; -1.809 ; -1.809 ; Fall       ; inputdata1[0]   ;
; operator[*]    ; inputdata1[0] ; 2.014  ; 2.014  ; Fall       ; inputdata1[0]   ;
;  operator[0]   ; inputdata1[0] ; 1.011  ; 1.011  ; Fall       ; inputdata1[0]   ;
;  operator[1]   ; inputdata1[0] ; 1.784  ; 1.784  ; Fall       ; inputdata1[0]   ;
;  operator[2]   ; inputdata1[0] ; 2.014  ; 2.014  ; Fall       ; inputdata1[0]   ;
; inputdata1[*]  ; operator[0]   ; 2.585  ; 2.585  ; Rise       ; operator[0]     ;
;  inputdata1[0] ; operator[0]   ; 0.477  ; 0.477  ; Rise       ; operator[0]     ;
;  inputdata1[1] ; operator[0]   ; 2.118  ; 2.118  ; Rise       ; operator[0]     ;
;  inputdata1[2] ; operator[0]   ; 2.585  ; 2.585  ; Rise       ; operator[0]     ;
;  inputdata1[3] ; operator[0]   ; 1.466  ; 1.466  ; Rise       ; operator[0]     ;
; inputdata2[*]  ; operator[0]   ; -1.582 ; -1.582 ; Rise       ; operator[0]     ;
;  inputdata2[0] ; operator[0]   ; -1.582 ; -1.582 ; Rise       ; operator[0]     ;
;  inputdata2[1] ; operator[0]   ; -1.992 ; -1.992 ; Rise       ; operator[0]     ;
;  inputdata2[2] ; operator[0]   ; -1.882 ; -1.882 ; Rise       ; operator[0]     ;
;  inputdata2[3] ; operator[0]   ; -2.129 ; -2.129 ; Rise       ; operator[0]     ;
; operator[*]    ; operator[0]   ; 1.246  ; 1.246  ; Rise       ; operator[0]     ;
;  operator[0]   ; operator[0]   ; 0.464  ; 0.464  ; Rise       ; operator[0]     ;
;  operator[1]   ; operator[0]   ; 1.016  ; 1.016  ; Rise       ; operator[0]     ;
;  operator[2]   ; operator[0]   ; 1.246  ; 1.246  ; Rise       ; operator[0]     ;
; inputdata1[*]  ; operator[0]   ; -0.481 ; -0.481 ; Fall       ; operator[0]     ;
;  inputdata1[0] ; operator[0]   ; -0.481 ; -0.481 ; Fall       ; operator[0]     ;
;  inputdata1[1] ; operator[0]   ; -0.511 ; -0.511 ; Fall       ; operator[0]     ;
;  inputdata1[2] ; operator[0]   ; -0.765 ; -0.765 ; Fall       ; operator[0]     ;
;  inputdata1[3] ; operator[0]   ; -0.737 ; -0.737 ; Fall       ; operator[0]     ;
; inputdata2[*]  ; operator[0]   ; -3.459 ; -3.459 ; Fall       ; operator[0]     ;
;  inputdata2[0] ; operator[0]   ; -3.882 ; -3.882 ; Fall       ; operator[0]     ;
;  inputdata2[1] ; operator[0]   ; -3.471 ; -3.471 ; Fall       ; operator[0]     ;
;  inputdata2[2] ; operator[0]   ; -3.459 ; -3.459 ; Fall       ; operator[0]     ;
;  inputdata2[3] ; operator[0]   ; -3.592 ; -3.592 ; Fall       ; operator[0]     ;
; operator[*]    ; operator[0]   ; -0.019 ; -0.019 ; Fall       ; operator[0]     ;
;  operator[0]   ; operator[0]   ; -0.019 ; -0.019 ; Fall       ; operator[0]     ;
;  operator[1]   ; operator[0]   ; -0.235 ; -0.235 ; Fall       ; operator[0]     ;
;  operator[2]   ; operator[0]   ; -0.637 ; -0.637 ; Fall       ; operator[0]     ;
+----------------+---------------+--------+--------+------------+-----------------+


+------------------------------------------------------------------------------------------------+
; Clock to Output Times                                                                          ;
+-------------+-------------------------+--------+--------+------------+-------------------------+
; Data Port   ; Clock Port              ; Rise   ; Fall   ; Clock Edge ; Clock Reference         ;
+-------------+-------------------------+--------+--------+------------+-------------------------+
; display[*]  ; inputdata1[0]           ; 14.343 ; 14.343 ; Fall       ; inputdata1[0]           ;
;  display[1] ; inputdata1[0]           ; 14.264 ; 14.264 ; Fall       ; inputdata1[0]           ;
;  display[2] ; inputdata1[0]           ; 14.261 ; 14.261 ; Fall       ; inputdata1[0]           ;
;  display[4] ; inputdata1[0]           ; 14.343 ; 14.343 ; Fall       ; inputdata1[0]           ;
;  display[5] ; inputdata1[0]           ; 13.866 ; 13.866 ; Fall       ; inputdata1[0]           ;
;  display[6] ; inputdata1[0]           ; 13.904 ; 13.904 ; Fall       ; inputdata1[0]           ;
; display[*]  ; mux_ula:seletor|ctrl[0] ; 9.146  ; 9.146  ; Rise       ; mux_ula:seletor|ctrl[0] ;
;  display[0] ; mux_ula:seletor|ctrl[0] ; 8.785  ; 8.785  ; Rise       ; mux_ula:seletor|ctrl[0] ;
;  display[1] ; mux_ula:seletor|ctrl[0] ; 9.099  ; 9.099  ; Rise       ; mux_ula:seletor|ctrl[0] ;
;  display[2] ; mux_ula:seletor|ctrl[0] ; 9.126  ; 9.126  ; Rise       ; mux_ula:seletor|ctrl[0] ;
;  display[3] ; mux_ula:seletor|ctrl[0] ; 8.659  ; 8.659  ; Rise       ; mux_ula:seletor|ctrl[0] ;
;  display[4] ; mux_ula:seletor|ctrl[0] ; 9.146  ; 9.146  ; Rise       ; mux_ula:seletor|ctrl[0] ;
;  display[5] ; mux_ula:seletor|ctrl[0] ; 8.694  ; 8.694  ; Rise       ; mux_ula:seletor|ctrl[0] ;
;  display[6] ; mux_ula:seletor|ctrl[0] ; 8.767  ; 8.767  ; Rise       ; mux_ula:seletor|ctrl[0] ;
; display[*]  ; mux_ula:seletor|ctrl[0] ; 9.146  ; 9.146  ; Fall       ; mux_ula:seletor|ctrl[0] ;
;  display[1] ; mux_ula:seletor|ctrl[0] ; 9.099  ; 9.099  ; Fall       ; mux_ula:seletor|ctrl[0] ;
;  display[2] ; mux_ula:seletor|ctrl[0] ; 9.126  ; 9.126  ; Fall       ; mux_ula:seletor|ctrl[0] ;
;  display[4] ; mux_ula:seletor|ctrl[0] ; 9.146  ; 9.146  ; Fall       ; mux_ula:seletor|ctrl[0] ;
;  display[5] ; mux_ula:seletor|ctrl[0] ; 8.694  ; 8.694  ; Fall       ; mux_ula:seletor|ctrl[0] ;
;  display[6] ; mux_ula:seletor|ctrl[0] ; 8.767  ; 8.767  ; Fall       ; mux_ula:seletor|ctrl[0] ;
; display[*]  ; operator[0]             ; 13.575 ; 13.575 ; Rise       ; operator[0]             ;
;  display[1] ; operator[0]             ; 13.496 ; 13.496 ; Rise       ; operator[0]             ;
;  display[2] ; operator[0]             ; 13.493 ; 13.493 ; Rise       ; operator[0]             ;
;  display[4] ; operator[0]             ; 13.575 ; 13.575 ; Rise       ; operator[0]             ;
;  display[5] ; operator[0]             ; 13.098 ; 13.098 ; Rise       ; operator[0]             ;
;  display[6] ; operator[0]             ; 13.136 ; 13.136 ; Rise       ; operator[0]             ;
; led         ; operator[0]             ; 9.582  ; 9.582  ; Rise       ; operator[0]             ;
+-------------+-------------------------+--------+--------+------------+-------------------------+


+----------------------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                                ;
+-------------+-------------------------+-------+-------+------------+-------------------------+
; Data Port   ; Clock Port              ; Rise  ; Fall  ; Clock Edge ; Clock Reference         ;
+-------------+-------------------------+-------+-------+------------+-------------------------+
; display[*]  ; inputdata1[0]           ; 6.882 ; 6.882 ; Fall       ; inputdata1[0]           ;
;  display[1] ; inputdata1[0]           ; 7.061 ; 7.061 ; Fall       ; inputdata1[0]           ;
;  display[2] ; inputdata1[0]           ; 7.072 ; 7.072 ; Fall       ; inputdata1[0]           ;
;  display[4] ; inputdata1[0]           ; 7.102 ; 7.102 ; Fall       ; inputdata1[0]           ;
;  display[5] ; inputdata1[0]           ; 6.882 ; 6.882 ; Fall       ; inputdata1[0]           ;
;  display[6] ; inputdata1[0]           ; 6.909 ; 6.909 ; Fall       ; inputdata1[0]           ;
; display[*]  ; mux_ula:seletor|ctrl[0] ; 4.554 ; 3.081 ; Rise       ; mux_ula:seletor|ctrl[0] ;
;  display[0] ; mux_ula:seletor|ctrl[0] ; 4.621 ; 4.621 ; Rise       ; mux_ula:seletor|ctrl[0] ;
;  display[1] ; mux_ula:seletor|ctrl[0] ; 4.738 ; 3.199 ; Rise       ; mux_ula:seletor|ctrl[0] ;
;  display[2] ; mux_ula:seletor|ctrl[0] ; 4.752 ; 3.195 ; Rise       ; mux_ula:seletor|ctrl[0] ;
;  display[3] ; mux_ula:seletor|ctrl[0] ; 4.558 ; 4.558 ; Rise       ; mux_ula:seletor|ctrl[0] ;
;  display[4] ; mux_ula:seletor|ctrl[0] ; 4.769 ; 3.299 ; Rise       ; mux_ula:seletor|ctrl[0] ;
;  display[5] ; mux_ula:seletor|ctrl[0] ; 4.554 ; 3.081 ; Rise       ; mux_ula:seletor|ctrl[0] ;
;  display[6] ; mux_ula:seletor|ctrl[0] ; 4.586 ; 3.112 ; Rise       ; mux_ula:seletor|ctrl[0] ;
; display[*]  ; mux_ula:seletor|ctrl[0] ; 3.081 ; 4.554 ; Fall       ; mux_ula:seletor|ctrl[0] ;
;  display[1] ; mux_ula:seletor|ctrl[0] ; 3.199 ; 4.738 ; Fall       ; mux_ula:seletor|ctrl[0] ;
;  display[2] ; mux_ula:seletor|ctrl[0] ; 3.195 ; 4.752 ; Fall       ; mux_ula:seletor|ctrl[0] ;
;  display[4] ; mux_ula:seletor|ctrl[0] ; 3.299 ; 4.769 ; Fall       ; mux_ula:seletor|ctrl[0] ;
;  display[5] ; mux_ula:seletor|ctrl[0] ; 3.081 ; 4.554 ; Fall       ; mux_ula:seletor|ctrl[0] ;
;  display[6] ; mux_ula:seletor|ctrl[0] ; 3.112 ; 4.586 ; Fall       ; mux_ula:seletor|ctrl[0] ;
; display[*]  ; operator[0]             ; 6.562 ; 6.562 ; Rise       ; operator[0]             ;
;  display[1] ; operator[0]             ; 6.741 ; 6.741 ; Rise       ; operator[0]             ;
;  display[2] ; operator[0]             ; 6.752 ; 6.752 ; Rise       ; operator[0]             ;
;  display[4] ; operator[0]             ; 6.782 ; 6.782 ; Rise       ; operator[0]             ;
;  display[5] ; operator[0]             ; 6.562 ; 6.562 ; Rise       ; operator[0]             ;
;  display[6] ; operator[0]             ; 6.589 ; 6.589 ; Rise       ; operator[0]             ;
; led         ; operator[0]             ; 4.985 ; 4.985 ; Rise       ; operator[0]             ;
+-------------+-------------------------+-------+-------+------------+-------------------------+


+-------------------------------------------------------------------------------------+
; Setup Transfers                                                                     ;
+---------------+-------------------------+----------+----------+----------+----------+
; From Clock    ; To Clock                ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+---------------+-------------------------+----------+----------+----------+----------+
; inputdata1[0] ; inputdata1[0]           ; 0        ; 0        ; 14       ; 14       ;
; operator[0]   ; inputdata1[0]           ; 0        ; 0        ; 7        ; 7        ;
; key_0         ; key_0                   ; 1        ; 0        ; 0        ; 0        ;
; inputdata1[0] ; mux_ula:seletor|ctrl[0] ; 0        ; 8        ; 0        ; 0        ;
; operator[0]   ; mux_ula:seletor|ctrl[0] ; 8        ; 0        ; 0        ; 0        ;
; inputdata1[0] ; operator[0]             ; 18       ; 18       ; 1        ; 1        ;
; operator[0]   ; operator[0]             ; 10       ; 10       ; 1        ; 1        ;
+---------------+-------------------------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


+-------------------------------------------------------------------------------------+
; Hold Transfers                                                                      ;
+---------------+-------------------------+----------+----------+----------+----------+
; From Clock    ; To Clock                ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+---------------+-------------------------+----------+----------+----------+----------+
; inputdata1[0] ; inputdata1[0]           ; 0        ; 0        ; 14       ; 14       ;
; operator[0]   ; inputdata1[0]           ; 0        ; 0        ; 7        ; 7        ;
; key_0         ; key_0                   ; 1        ; 0        ; 0        ; 0        ;
; inputdata1[0] ; mux_ula:seletor|ctrl[0] ; 0        ; 8        ; 0        ; 0        ;
; operator[0]   ; mux_ula:seletor|ctrl[0] ; 8        ; 0        ; 0        ; 0        ;
; inputdata1[0] ; operator[0]             ; 18       ; 18       ; 1        ; 1        ;
; operator[0]   ; operator[0]             ; 10       ; 10       ; 1        ; 1        ;
+---------------+-------------------------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


+-----------------------------------------------------------------------------------------------+
; Recovery Transfers                                                                            ;
+-------------------------+-------------------------+----------+----------+----------+----------+
; From Clock              ; To Clock                ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+-------------------------+-------------------------+----------+----------+----------+----------+
; mux_ula:seletor|ctrl[0] ; mux_ula:seletor|ctrl[0] ; 2        ; 2        ; 0        ; 0        ;
; key_0                   ; operator[0]             ; 1        ; 0        ; 1        ; 0        ;
; operator[0]             ; operator[0]             ; 0        ; 0        ; 1        ; 1        ;
+-------------------------+-------------------------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


+-----------------------------------------------------------------------------------------------+
; Removal Transfers                                                                             ;
+-------------------------+-------------------------+----------+----------+----------+----------+
; From Clock              ; To Clock                ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+-------------------------+-------------------------+----------+----------+----------+----------+
; mux_ula:seletor|ctrl[0] ; mux_ula:seletor|ctrl[0] ; 2        ; 2        ; 0        ; 0        ;
; key_0                   ; operator[0]             ; 1        ; 0        ; 1        ; 0        ;
; operator[0]             ; operator[0]             ; 0        ; 0        ; 1        ; 1        ;
+-------------------------+-------------------------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


---------------
; Report TCCS ;
---------------
No dedicated SERDES Transmitter circuitry present in device or used in design


---------------
; Report RSKM ;
---------------
No dedicated SERDES Receiver circuitry present in device or used in design


+------------------------------------------------+
; Unconstrained Paths                            ;
+---------------------------------+-------+------+
; Property                        ; Setup ; Hold ;
+---------------------------------+-------+------+
; Illegal Clocks                  ; 0     ; 0    ;
; Unconstrained Clocks            ; 0     ; 0    ;
; Unconstrained Input Ports       ; 9     ; 9    ;
; Unconstrained Input Port Paths  ; 56    ; 56   ;
; Unconstrained Output Ports      ; 8     ; 8    ;
; Unconstrained Output Port Paths ; 33    ; 33   ;
+---------------------------------+-------+------+


+------------------------------------+
; TimeQuest Timing Analyzer Messages ;
+------------------------------------+
Info: *******************************************************************
Info: Running Quartus II 32-bit TimeQuest Timing Analyzer
    Info: Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition
    Info: Processing started: Tue Nov 19 00:11:30 2019
Info: Command: quartus_sta ula -c ula
Info: qsta_default_script.tcl version: #1
Warning (20028): Parallel compilation is not licensed and has been disabled
Info (21077): Low junction temperature is 0 degrees C
Info (21077): High junction temperature is 85 degrees C
Warning (335093): TimeQuest Timing Analyzer is analyzing 9 combinational loops as latches.
Critical Warning (332012): Synopsys Design Constraints File file not found: 'ula.sdc'. A Synopsys Design Constraints File is required by the TimeQuest Timing Analyzer to get proper timing constraints. Without it, the Compiler will not properly optimize the design.
Info (332142): No user constrained base clocks found in the design. Calling "derive_clocks -period 1.0"
Info (332105): Deriving Clocks
    Info (332105): create_clock -period 1.000 -name key_0 key_0
    Info (332105): create_clock -period 1.000 -name inputdata1[0] inputdata1[0]
    Info (332105): create_clock -period 1.000 -name operator[0] operator[0]
    Info (332105): create_clock -period 1.000 -name mux_ula:seletor|ctrl[0] mux_ula:seletor|ctrl[0]
Warning (332125): Found combinational loop of 4 nodes
    Warning (332126): Node "conversor_display|display[6]|datac"
    Warning (332126): Node "conversor_display|display[6]|combout"
    Warning (332126): Node "conversor_display|display[6]~5|datad"
    Warning (332126): Node "conversor_display|display[6]~5|combout"
Warning (332125): Found combinational loop of 4 nodes
    Warning (332126): Node "conversor_display|display[5]|datac"
    Warning (332126): Node "conversor_display|display[5]|combout"
    Warning (332126): Node "conversor_display|display[5]~4|datad"
    Warning (332126): Node "conversor_display|display[5]~4|combout"
Warning (332125): Found combinational loop of 4 nodes
    Warning (332126): Node "conversor_display|display[4]|datac"
    Warning (332126): Node "conversor_display|display[4]|combout"
    Warning (332126): Node "conversor_display|display[4]~3|datad"
    Warning (332126): Node "conversor_display|display[4]~3|combout"
Warning (332125): Found combinational loop of 4 nodes
    Warning (332126): Node "conversor_display|display[2]|dataa"
    Warning (332126): Node "conversor_display|display[2]|combout"
    Warning (332126): Node "conversor_display|display[2]~2|datad"
    Warning (332126): Node "conversor_display|display[2]~2|combout"
Warning (332125): Found combinational loop of 4 nodes
    Warning (332126): Node "conversor_display|display[1]|datab"
    Warning (332126): Node "conversor_display|display[1]|combout"
    Warning (332126): Node "conversor_display|display[1]~1|datad"
    Warning (332126): Node "conversor_display|display[1]~1|combout"
Info (332097): The following timing edges are non-unate.  TimeQuest will assume pos-unate behavior for these edges in the clock network.
    Info (332098): Cell: seletor|saida_led~11  from: datad  to: combout
Info: Found TIMEQUEST_REPORT_SCRIPT_INCLUDE_DEFAULT_ANALYSIS = ON
Info: Analyzing Slow Model
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -4.736
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -4.736        -9.449 mux_ula:seletor|ctrl[0] 
    Info (332119):    -2.222        -5.582 operator[0] 
    Info (332119):     0.011         0.000 inputdata1[0] 
    Info (332119):     0.379         0.000 key_0 
Info (332146): Worst-case hold slack is -1.052
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.052        -3.890 inputdata1[0] 
    Info (332119):    -0.284        -0.818 operator[0] 
    Info (332119):     0.391         0.000 key_0 
    Info (332119):     3.159         0.000 mux_ula:seletor|ctrl[0] 
Info (332146): Worst-case recovery slack is -1.696
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.696        -2.475 operator[0] 
    Info (332119):     1.879         0.000 mux_ula:seletor|ctrl[0] 
Info (332146): Worst-case removal slack is -2.373
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -2.373        -4.746 mux_ula:seletor|ctrl[0] 
    Info (332119):    -0.135        -0.135 operator[0] 
Info (332146): Worst-case minimum pulse width slack is -1.380
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.380        -1.380 inputdata1[0] 
    Info (332119):    -1.380        -1.380 operator[0] 
    Info (332119):    -1.222        -2.222 key_0 
    Info (332119):     0.500         0.000 mux_ula:seletor|ctrl[0] 
Info (332001): The selected device family is not supported by the report_metastability command.
Info: Analyzing Fast Model
Info (332097): The following timing edges are non-unate.  TimeQuest will assume pos-unate behavior for these edges in the clock network.
    Info (332098): Cell: seletor|saida_led~11  from: datad  to: combout
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -1.932
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.932        -3.863 mux_ula:seletor|ctrl[0] 
    Info (332119):    -0.600        -1.059 operator[0] 
    Info (332119):     0.665         0.000 key_0 
    Info (332119):     0.674         0.000 inputdata1[0] 
Info (332146): Worst-case hold slack is -0.797
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -0.797        -3.090 inputdata1[0] 
    Info (332119):    -0.477        -1.810 operator[0] 
    Info (332119):     0.215         0.000 key_0 
    Info (332119):     1.567         0.000 mux_ula:seletor|ctrl[0] 
Info (332146): Worst-case recovery slack is -0.589
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -0.589        -0.589 operator[0] 
    Info (332119):     1.510         0.000 mux_ula:seletor|ctrl[0] 
Info (332146): Worst-case removal slack is -1.418
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.418        -2.835 mux_ula:seletor|ctrl[0] 
    Info (332119):    -0.078        -0.078 operator[0] 
Info (332146): Worst-case minimum pulse width slack is -1.380
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.380        -1.380 inputdata1[0] 
    Info (332119):    -1.380        -1.380 operator[0] 
    Info (332119):    -1.222        -2.222 key_0 
    Info (332119):     0.500         0.000 mux_ula:seletor|ctrl[0] 
Info (332001): The selected device family is not supported by the report_metastability command.
Info (332102): Design is not fully constrained for setup requirements
Info (332102): Design is not fully constrained for hold requirements
Info: Quartus II 32-bit TimeQuest Timing Analyzer was successful. 0 errors, 30 warnings
    Info: Peak virtual memory: 304 megabytes
    Info: Processing ended: Tue Nov 19 00:11:30 2019
    Info: Elapsed time: 00:00:00
    Info: Total CPU time (on all processors): 00:00:01


